#package name
NAME=efl

#Description
DESC="Enlightenment Foundation Libraries"

#package version
VERSION=1.20.6
DVERSION=1.20.6

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=http://download.enlightenment.org/rel/libs/efl/efl-${DVERSION}.tar.xz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF="--disable-tslib --enable-fb --enable-xinput22 --enable-multisense --enable-systemd --enable-image-loader-webp --enable-harfbuzz --enable-wayland --enable-liblz4 --enable-drm --enable-elput --enable-egl --with-opengl=es"

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=autotools

# build/package dependancies
DEPS=('printproto' 'avahi' 'bullet' 'cairo' 'dbus' 'expat' 'fontconfig' 'freetype2' 'fribidi' 'gcc-libs' 'giflib' 'glib2' 'glibc' 'gst-plugins-base' 'gstreamer' 'harfbuzz' 'ibus' 'libX11' 'libXScrnSaver' 'libXau' 'libXcomposite' 'libXcursor' 'libXdamage' 'libXdmcp' 'libXext' 'libXfixes' 'libXi' 'libXinerama' 'libXrandr' 'libXrender' 'libXtst' 'libcap2' 'libdrm' 'libevdev' 'libffi' 'libgcrypt' 'libgpg-error' 'libinput' 'libjpeg' 'libpng' 'libraw' 'librsvg' 'libspectre' 'libunwind' 'libwebp' 'libxcb' 'libxkbcommon' 'libxshmfence' 'luajit' 'lz4' 'mesalib' 'mtdev' 'openjpeg' 'openssl1.0' 'orc' 'pcre' 'poppler' 'systemd' 'tiff' 'util-linux' 'wayland' 'xz' 'zlib')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=('printproto')

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

export PKG_CONFIG_PATH=/lib/pkgconfig:/usr/lib/pkgconfig

#function BuildAndInstall
#{
#}

#Default HTTP curl new version detection
function Detect
{
        LISTURL=http://download.enlightenment.org/rel/libs/efl/
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $DVERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

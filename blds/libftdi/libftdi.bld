#package name
NAME=libftdi

#package version
VERSION=1.1-1
DVERSION=1.1

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=http://www.intra2net.com/en/developer/libftdi/download/libftdi1-${DVERSION}.tar.bz2

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
ISSPECIAL=1

# build/package dependancies
DEPS=('gcc-libs' 'glibc' 'libusb' 'python')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
	sed -i 's|LIB_SUFFIX 64|LIB_SUFFIX ""|' CMakeLists.txt
	cmake . -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_SKIP_BUILD_RPATH=ON \
	    -DCMAKE_BUILD_TYPE=Release -DEXAMPLES=OFF -DFTDI_EEPROM=OFF
    make -j${BLDR_CORES}
	make DESTDIR=/root/bldr-inst install
}

#Default HTTP curl new version detection
function Detect
{
	NAME=${NAME}1
	LISTURL=http://www.intra2net.com/en/developer/libftdi/download/
	FILELIST=`GetFileList`
	LATEST=0

	for i in ${FILELIST[@]};
	do
			CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
			vercomp $LATEST $CURVER
			if [ $? -eq 2 ];
			then
					LATEST=$CURVER
			fi
	done

	vercomp $DVERSION $LATEST
	if [ $? -eq 2 ];
	then
			echo "$NAME: New Version Available! - $LATEST"
	fi
}

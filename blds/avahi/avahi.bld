#package name
NAME=avahi

#Description
DESC="Service Discovery for Linux using mDNS/DNS-SD -- compatible with Bonjour"

DVERSION=0.7

#package version
VERSION=0.7

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=http://www.avahi.org/download/avahi-${DVERSION}.tar.gz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# build/package dependancies
DEPS=

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=('pygtk' 'dbus-python')

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
	export PYTHON=/usr/bin/python2
	./configure \
		--prefix=/usr \
		--sysconfdir=/etc \
		--localstatedir=/var \
		--sbindir=/usr/bin \
		--with-distro=none \
		with_dbus_sys=/usr/share/dbus-1/system.d \
		--disable-monodoc \
		--disable-qt4 \
		--disable-qt3 \
		--disable-mono \
		--enable-compat-libdns_sd \
		--with-avahi-priv-access-group=network \
		--with-autoipd-user=avahi \
		--with-autoipd-group=avahi \
		--with-systemdsystemunitdir=/usr/lib/systemd/system
	sed -i -e 's/ -shared / -Wl,-O1,--as-needed\0/g' libtool

	make -j${BLDR_CORES}
	make DESTDIR=/root/bldr-inst install

# mdnsresponder compat
	ln -s avahi-compat-libdns_sd/dns_sd.h /root/bldr-inst/usr/include/dns_sd.h

# move example services
	cd /root/bldr-inst
	mkdir -p usr/share/doc/avahi
	mv -v etc/avahi/services/*.service /root/bldr-inst/usr/share/doc/avahi/
}

#Default HTTP curl new version detection
function Detect
{
        LISTURL=http://www.avahi.org/download/
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $DVERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

#package name
NAME=graphviz

#Description
DESC="Graph visualization software"

#package version
VERSION=2.40.1
DVERSION=2.40.1

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# build/package dependancies
DEPS=('atk' 'cairo' 'expat' 'fontconfig' 'freetype2' 'gcc-libs' 'gd' 'gdk-pixbuf' 'ghostscript' 'glib2' 'glibc' 'gtk+2' 'harfbuzz' 'lcms2' 'libICE' 'libSM' 'libX11' 'libXau' 'libXaw' 'libXdmcp' 'libXext' 'libXmu' 'libXpm' 'libXrender' 'libXt' 'libcroco' 'libffi' 'libglvnd' 'libjpeg' 'libpng' 'librsvg' 'libtool' 'libvpx' 'libxcb' 'libxml2' 'nspr' 'nss' 'openjpeg2' 'pango' 'pcre' 'pixman' 'poppler' 'qt4' 'tiff' 'util-linux' 'xz' 'zlib')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
    if [ -z "$BLDR_CONTINUE" ]; then
        git clone --recursive https://gitlab.com/graphviz/graphviz.git
        cd graphviz
        git checkout stable_release_$DVERSION
        cd ..
    fi
    cd graphviz
    NOCONFIG=1 ./autogen.sh
    ./configure --prefix=/usr --enable-sharp=no --enable-swig=no --enable-java=no --enable-lua=no --enable-php=no --enable-ruby=no --enable-python=no
    make -j${BLDR_CORES}

    make DESTDIR=/root/bldr-inst install
}

#Default HTTP curl new version detection
function Detect
{
        LISTURL=https://graphviz.gitlab.io/_pages/Download/Download_source.html
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $DVERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

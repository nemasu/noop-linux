#package name
NAME=grub

#package version
VERSION=2.00-1
DVERSION=2.00

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=ftp://ftp.gnu.org/gnu/grub/grub-${DVERSION}.tar.xz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
ISSPECIAL=0

# build/package dependancies
DEPS=('freetype2' 'fuse' 'glibc' 'lvm2' 'xz' 'zlib')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
	cd ..
	dir1=`ls`
	cp -r $dir1 ${dir1}_64

	cd $dir1

	 sed 's|/usr/share/fonts/unifont|/usr/share/fonts/unifont /usr/share/fonts/misc|g' -i configure.ac
	sed 's|/usr/share/fonts/dejavu|/usr/share/fonts/dejavu /usr/share/fonts/TTF|g' -i configure.ac

	autoconf
	./configure --enable-device-mapper --enable-cache-stats --enable-grub-mkfont --prefix=/usr --sysconfdir=/etc --with-bootdir=/boot --with-grubdir="grub" --with-platform="pc"
	make -j3
	make DESTDIR=/root/bldr-inst install

	if [ "`uname -m`" == "x86_64" ];
	then
		cd ../${dir1}_64
		sed 's|/usr/share/fonts/unifont|/usr/share/fonts/unifont /usr/share/fonts/misc|g' -i configure.ac
		sed 's|/usr/share/fonts/dejavu|/usr/share/fonts/dejavu /usr/share/fonts/TTF|g' -i configure.ac

		autoconf
		./configure --enable-device-mapper --enable-cache-stats --enable-grub-mkfont --prefix=/usr --sysconfdir=/etc --with-bootdir=/boot --with-grubdir="grub" --with-platform="efi"
		make -j3
		make DESTDIR=/root/bldr-inst install
	fi

}

#Default HTTP curl new version detection
function Detect
{
	LISTURL=ftp://ftp.gnu.org/gnu/grub/
	FILELIST=`GetFileList`
	LATEST=0

	for i in ${FILELIST[@]};
	do
			CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
			vercomp $LATEST $CURVER
			if [ $? -eq 2 ];
			then
					LATEST=$CURVER
			fi
	done

	vercomp $DVERSION $LATEST
	if [ $? -eq 2 ];
	then
			echo "$NAME: New Version Available! - $LATEST"
	fi
}

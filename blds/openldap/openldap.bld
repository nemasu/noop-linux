#package name
NAME=openldap

#package version
VERSION=2.4.43
DVERSION=2.4.43

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=ftp://ftp.openldap.org/pub/OpenLDAP/openldap-release/openldap-${DVERSION}.tgz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
ISSPECIAL=1

# build/package dependancies
DEPS=('db' 'glibc' 'libtool' 'openssl' 'sasl' 'util-linux')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
	sed -i 's|-m 644 $(LIBRARY)|-m 755 $(LIBRARY)|' libraries/{liblber,libldap,libldap_r}/Makefile.in
	sed -i 's|#define LDAPI_SOCK LDAP_RUNDIR LDAP_DIRSEP "run" LDAP_DIRSEP "ldapi"|#define LDAPI_SOCK LDAP_DIRSEP "run" LDAP_DIRSEP "openldap" LDAP_DIRSEP "ldapi"|' include/ldap_defaults.h
	sed -i 's|%LOCALSTATEDIR%/run|/run/openldap|' servers/slapd/slapd.conf
	sed -i 's|-$(MKDIR) $(DESTDIR)$(localstatedir)/run|-$(MKDIR) $(DESTDIR)/run/openldap|' servers/slapd/Makefile.in
	./configure --prefix=/usr --mandir=/usr/share/man --libexecdir=/usr/lib \
		--sysconfdir=/etc --localstatedir=/var/lib/openldap \
		--enable-ipv6 --enable-syslog --enable-local \
		--enable-bdb --enable-hdb \
		--enable-crypt --enable-dynamic \
		--with-threads --disable-wrappers \
		--without-fetch --with-cyrus-sasl \
		--enable-spasswd \
		--enable-overlays=mod --enable-modules=yes --enable-monitor
	make -j${BLDR_CORES}
	make DESTDIR=/root/bldr-inst install

}

#Default HTTP curl new version detection
function Detect
{
	LISTURL=ftp://ftp.openldap.org/pub/OpenLDAP/openldap-release/
	FILELIST=`GetFileList`
	LATEST=0

	for i in ${FILELIST[@]};
	do
			CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
			vercomp $LATEST $CURVER
			if [ $? -eq 2 ];
			then
					LATEST=$CURVER
			fi
	done

	vercomp $DVERSION $LATEST
	if [ $? -eq 2 ];
	then
			echo "$NAME: New Version Available! - $LATEST"
	fi
}

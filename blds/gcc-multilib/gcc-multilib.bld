#!/bin/bash
# NAME
# VERSION
# ISUSR
# SRC
# POST,PRE
# EXTRAFILES
# ISSPECIAL

ARCH=`uname -m`
NAME=gcc-multilib
VERSION=4.9.0
ISUSR=1
SRC=ftp://ftp.gnu.org/gnu/gcc/gcc-${VERSION}/gcc-$VERSION.tar.bz2
EXTRACONF=
ISSPECIAL=1
#DEPS=('zip')

function BuildAndInstall
{
	sed -i 's/install_to_$(INSTALL_DEST) //' libiberty/Makefile.in
	cd ..
    mkdir build-dir
    cd build-dir
    ../gcc-$VERSION/configure --prefix=/usr \
		  --libdir=/usr/lib --libexecdir=/usr/lib \
		  --mandir=/usr/share/man --infodir=/usr/share/info \
		  --with-bugurl=https://bugs.archlinux.org/ \
		  --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++ \
		  --enable-shared --enable-threads=posix \
		  --with-system-zlib --enable-__cxa_atexit \
		  --enable-clocale=gnu \
		  --enable-gnu-unique-object --enable-linker-build-id \
		  --enable-cloog-backend=isl --disable-cloog-version-check \
		  --enable-lto --enable-plugin --enable-install-libiberty \
		  --with-linker-hash-style=gnu \
		  --enable-multilib --disable-werror \
		  --enable-checking=release
    
	make -j3
    make DESTDIR=`pwd`/../../bldr-inst install
	pushd .
	if [ $ARCH == "i686" ]; then
		ARCHMACH="i686-pc"
	elif [ $ARCH == "x86_64" ]; then
		ARCHMACH="x86_64-unknown"
	fi


	mkdir -p `pwd`/../../gcc-libs-inst/usr/lib/gcc/$ARCHMACH-linux-gnu/$VERSION

	cd `pwd`/../../bldr-inst

	mv -v usr/lib/gcc/$ARCHMACH-linux-gnu/$VERSION/*.so* `pwd`/../gcc-libs-inst/usr/lib/gcc/$ARCHMACH-linux-gnu/$VERSION/

	if [ $ARCH == "i686" ]; then
		mv -v usr/lib/*.so* `pwd`/../gcc-libs-inst/usr/lib/
	elif [ $ARCH == "x86_64" ]; then
		mkdir -p `pwd`/../gcc-libs-inst/usr/lib64
		mkdir -p `pwd`/../gcc-libs-inst/usr/lib32
		mv -v usr/lib64/*.so* `pwd`/../gcc-libs-inst/usr/lib64/
		mv -v usr/lib32/*.so* `pwd`/../gcc-libs-inst/usr/lib32/
	fi

	cd `pwd`/../gcc-libs-inst/

	mkdir -p usr/share/gdb/auto-load/usr/lib
	
	if [ $ARCH == "i686" ]; then
		mv -v usr/lib/*.py usr/share/gdb/auto-load/usr/lib/
    elif [ $ARCH == "x86_64" ]; then
		mkdir -p usr/share/gdb/auto-load/usr/lib
		mv -v usr/lib64/*.py usr/share/gdb/auto-load/usr/lib/
    fi
	
	echo Moving any lib64 contents to lib
	if [ -e ./lib64 ]; then
    	mkdir -p ./lib
	    cp -vr ./lib64/* ./lib/
    	rm -rf ./lib64
	fi

	if [ -e ./usr/lib64 ]; then
    	mkdir -p ./usr/lib
	    cp -vr ./usr/lib64/* ./usr/lib/
    	rm -rf ./usr/lib64
	fi

	set +e
	echo "Stripping libs and binaries..."
	find {,usr/}{bin,lib,sbin} -type f -exec strip --strip-debug '{}' ';'
	find {,usr/}{bin,sbin} -type f -exec strip --strip-all '{}' ';'
	set -e

	pkgr -genmeta lib32-gcc-libs $VERSION
	pkgr -genpkg
	mv -v *.pkg ~/bldr-done
	cd ..
	rm -rf gcc-libs-inst/
	
	popd

}

function Detect
{
        LISTURL=ftp://ftp.gnu.org/gnu/gcc/
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g;`
                vercomp $LATEST $CURVER
                if [ $? -eq 2 ];
                then
                        LATEST=$CURVER
                fi
        done

        vercomp $VERSION $LATEST
        if [ $? -eq 2 ];
        then
                echo "$NAME: New Version Available! - $LATEST"
        fi
}

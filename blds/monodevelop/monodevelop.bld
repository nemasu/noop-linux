#package name
NAME=monodevelop

#Description
DESC="MonoDevelop is a cross platform IDE mostly aimed at Mono/.NET developers"

#package version
VERSION=6.2.0.1413

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#autotools, python, perl, cmake, custom
BUILD=custom

# build/package dependancies
DEPS=('curl' 'glibc' 'gnome-sharp' 'libssh2' 'mono' 'mono-addins' 'openssl' 'zlib')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=('gnome-sharp' 'mono' 'mono-addins')

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
        if [ ! -e "./monodevelop" ]; then
                git clone --recursive https://github.com/mono/monodevelop.git
        fi
        cd monodevelop
        git checkout monodevelop-$VERSION
        ./configure --prefix=/usr --profile=stable --enable-release
        make
        make DESTDIR=/root/bldr-inst install
    install -Dm755 main/external/nuget-binary/NuGet.exe /root/bldr-inst/usr/lib/monodevelop/AddIns/MonoDevelop.PackageManagement/NuGet.exe
}

#Default HTTP curl new version detection
function Detect
{
        LISTURL=https://github.com/mono/monodevelop/releases
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $VERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

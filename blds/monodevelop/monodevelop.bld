#package name
NAME=monodevelop

#Description
DESC="MonoDevelop is a cross platform IDE mostly aimed at Mono/.NET developers"

#package version
VERSION=7.6.9.22

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=https://download.mono-project.com/repo/ubuntu/pool/main/m/monodevelop/monodevelop_${VERSION}.orig.tar.bz2

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#autotools, python, perl, cmake, custom
BUILD=custom

# build/package dependancies
DEPS=('nuget' 'msbuild' 'gtk-sharp2' 'mono-addins' 'mono' 'gnome-sharp' 'glibc')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=('gnome-sharp' 'mono' 'mono-addins' 'gtk-sharp2' 'msbuild' 'nuget')

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=1

function BuildAndInstall
{
    ./configure --enable-release --prefix=/usr --disable-git
    
    #Git support not building currently, disable for now
    echo "exit 0" > src/addins/VersionControl/MonoDevelop.VersionControl.Git/build_libgit2.sh

    #This version is failing to download, so lets try a different one
    sed -i -e 's|ExtCore (0.8.46)|ExtCore (0.8.45)|g' external/fsharpbinding/paket.lock
    
    make
    make DESTDIR=/root/bldr-inst install
#    if [ ! -e "./monodevelop" ]; then
#        git clone --recursive https://github.com/mono/monodevelop.git
#    fi
#    cd monodevelop
#    git checkout monodevelop-$VERSION
#    ./configure --prefix=/usr --profile=stable --enable-release
#    make
#    make DESTDIR=/root/bldr-inst install
#    install -Dm755 main/external/nuget-binary/NuGet.exe /root/bldr-inst/usr/lib/monodevelop/AddIns/MonoDevelop.PackageManagement/NuGet.exe
}

#Default HTTP curl new version detection
function Detect
{
        LISTURL=https://github.com/mono/monodevelop/releases
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $VERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

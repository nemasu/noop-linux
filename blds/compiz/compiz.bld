#package name
NAME=compiz

#package version
VERSION=0.9.12.1

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
BASE=`echo $VERSION | sed -e 's/\([0-9]*\.[0-9]*\.[0-9]*\).*/\1/g'`
SRC=https://launchpad.net/compiz/${BASE}/${VERSION}/+download/compiz-${VERSION}.tar.bz2

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
ISSPECIAL=1

# build/package dependancies
DEPS=

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=1

function BuildAndInstall
{
	find -type f \( -name 'CMakeLists.txt' -or -name '*.cmake' \) -exec sed -e 's/COMMAND python/COMMAND python2/g' -i {} \;
	find compizconfig/ccsm -type f -exec sed -e 's|^#!.*python|#!/usr/bin/env python2|g' -i {} \;
	export PYTHON="/usr/bin/python2"

	# Fix Python build directory with CMake 3.2
	sed -i 's/${PY_BUILD_DIR}/lib/g' compizconfig/ccsm/CMakeLists.txt

	mkdir build; cd build

	cmake .. \
		-DCMAKE_BUILD_TYPE="Release" \
		-DCMAKE_INSTALL_PREFIX="/usr" \
		-DPYTHON_INCLUDE_DIR=/usr/include/python2.7 \
		-DPYTHON_LIBRARY=/usr/lib/libpython2.7.so \
		-DQT_QMAKE_EXECUTABLE=qmake-qt4 \
		-DCOMPIZ_DISABLE_SCHEMAS_INSTALL=On \
		-DCOMPIZ_BUILD_WITH_RPATH=Off \
		-DCOMPIZ_PACKAGING_ENABLED=On \
		-DUSE_GCONF=Off \
		-DUSE_GSETTINGS=On \
		-DCOMPIZ_BUILD_TESTING=Off \
		-DCOMPIZ_WERROR=Off \
		-DCOMPIZ_DEFAULT_PLUGINS="composite,opengl,decor,resize,place,move,ccp"

	make -j${BLDR_CORES}
	make DESTDIR=/root/bldr-inst install

	rm -rf /root/bldr-inst/usr/share/gconf
}

#Default HTTP curl new version detection
function Detect
{
	LISTURL=https://launchpad.net/compiz
	FILELIST=`GetFileList`
	LATEST=0

	for i in ${FILELIST[@]};
	do
			CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
			vercomp $LATEST $CURVER
			if [ $? -eq 2 ];
			then
					LATEST=$CURVER
			fi
	done

	vercomp $VERSION $LATEST
	if [ $? -eq 2 ];
	then
			echo "$NAME: New Version Available! - $LATEST"
	fi
}

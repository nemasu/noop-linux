#package name
NAME=mate-applets

#Description
DESC="Applets for MATE panel (GTK2 version)"

#package version
VERSION=1.14.0
DVERSION=1.14.0

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
MM=`echo $DVERSION | sed 's/\([0-9]*\.[0-9]*\)\..*/\1/g'`
SRC=http://pub.mate-desktop.org/releases/${MM}/${NAME}-${DVERSION}.tar.xz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# build/package dependancies
DEPS=('atk' 'cairo' 'dbus' 'dbus-glib' 'dconf' 'expat' 'fontconfig' 'freetype2' 'gdk-pixbuf' 'glib2' 'glibc' 'gtk+2' 'gtksourceview2' 'harfbuzz' 'libICE' 'libSM' 'libX11' 'libXau' 'libXdmcp' 'libXext' 'libXrandr' 'libXrender' 'libXres' 'libcap2' 'libffi' 'libgcrypt' 'libgpg-error' 'libgtop2' 'libmateweather' 'libnotify' 'libpng' 'libpng15' 'libsoup' 'libwnck2' 'libxcb' 'libxml2' 'mate-desktop' 'mate-panel' 'pango' 'pcre' 'pixman' 'polkit' 'sqlite' 'startup-notification' 'systemd' 'upower' 'util-linux' 'wireless_tools' 'xcb-util' 'xz' 'zlib')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
	PYTHON=/usr/bin/python2 ./configure \
        --prefix=/usr \
        --sysconfdir=/etc \
        --libexecdir=/usr/lib/mate-applets \
        --enable-polkit \
        --enable-networkmanager \
        --enable-ipv6 \
        --disable-static
    make -j${BLDR_CORES}
	make DESTDIR=/root/bldr-inst install
}

#Default HTTP curl new version detection
function Detect
{
	#Limit to same series
	MM=`echo $DVERSION | sed 's/\([0-9]*\.[0-9]*\)\..*/\1/g'`
	LISTURL=http://pub.mate-desktop.org/releases/${MM}/
	FILELIST=`GetFileList`
	LATEST=0

	for i in ${FILELIST[@]};
	do
			CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
			vercomp $LATEST $CURVER
			if [ $? -eq 2 ];
			then
					LATEST=$CURVER
			fi
	done

	vercomp $VERSION $LATEST
	if [ $? -eq 2 ];
	then
			echo "$NAME: New Version Available! - $LATEST"
	fi
}

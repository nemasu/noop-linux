#package name
NAME=atril

#package version
VERSION=1.10.0
DVERSION=1.10.0

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
MM=`echo $DVERSION | sed 's/\([0-9]*\.[0-9]*\)\..*/\1/g'`
SRC=http://pub.mate-desktop.org/releases/${MM}/${NAME}-${DVERSION}.tar.xz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
ISSPECIAL=1

# build/package dependancies
DEPS=('gtk-doc' 'itstool' 'gobject-introspection' 'mate-icon-theme' 'atk' 'cairo' 'caja' 'expat' 'fontconfig' 'freetype2' 'gcc-libs' 'gdk-pixbuf' 'glib2' 'glibc' 'gtk+2' 'harfbuzz' 'lcms2' 'libICE' 'libSM' 'libX11' 'libXau' 'libXcomposite' 'libXcursor' 'libXdamage' 'libXdmcp' 'libXext' 'libXfixes' 'libXi' 'libXinerama' 'libXrandr' 'libXrender' 'libffi' 'libgcrypt' 'libgpg-error' 'libjpeg' 'libpng15' 'libsecret' 'libxcb' 'libxml2' 'openjpeg' 'pango' 'pcre' 'pixman' 'poppler' 'tiff' 'util-linux' 'xz' 'zlib')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=('mate-icon-theme' 'gobject-introspection' 'itstool' 'gtk-doc')

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
	./configure \
        --prefix=/usr \
        --libexecdir=/usr/lib/atril \
        --with-gtk=2.0 \
        --enable-gtk-doc \
        --enable-djvu \
        --enable-dvi \
        --enable-t1lib \
        --enable-pixbuf \
        --enable-comics \
        --enable-xps \
        --enable-introspection \
        --disable-static
    make -j${BLDR_CORES}
	make DESTDIR=/root/bldr-inst install
}

#Default HTTP curl new version detection
function Detect
{
	#Limit to same series
	MM=`echo $DVERSION | sed 's/\([0-9]*\.[0-9]*\)\..*/\1/g'`
	LISTURL=http://pub.mate-desktop.org/releases/${MM}/
	FILELIST=`GetFileList`
	LATEST=0

	for i in ${FILELIST[@]};
	do
			CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
			vercomp $LATEST $CURVER
			if [ $? -eq 2 ];
			then
					LATEST=$CURVER
			fi
	done

	vercomp $VERSION $LATEST
	if [ $? -eq 2 ];
	then
			echo "$NAME: New Version Available! - $LATEST"
	fi
}

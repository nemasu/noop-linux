#package name
NAME=go

#package version
VERSION=1.5.1

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=https://storage.googleapis.com/golang/go${VERSION}.src.tar.gz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
ISSPECIAL=1

# build/package dependancies
DEPS=('gcc-libs' 'glibc' 'lib32-glibc')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
	export GOROOT_BOOTSTRAP=/usr
	export GOROOT=`pwd`
	export GOBIN="$GOROOT/bin"
	export GOROOT_FINAL=/usr/lib/go
	export GOOS=linux
	export GARCH=amd64
	export GOPATH=/root/bldr-tmp

	cd src
	./make.bash
	../bin/go get -d golang.org/x/tools/cmd/godoc
	../bin/go build -o /root/bldr-tmp/godoc golang.org/x/tools/cmd/godoc
	for tool in vet cover callgraph; do
		../bin/go get -d golang.org/x/tools/cmd/${tool}
		../bin/go build -o $GOROOT/pkg/tool/${GOOS}_${GOARCH}/${tool} golang.org/x/tools/cmd/${tool}
	done
	cd ..

	install -Dm755 /root/bldr-tmp/godoc /root/bldr-inst/usr/bin/godoc

	mkdir -p \
		/root/bldr-inst/{etc/profile.d,usr/{share/go,lib/go,lib/go/src,lib/go/site/src}}

	cp -r doc misc -t /root/bldr-inst/usr/share/go
	ln -s /usr/share/go/doc /root/bldr-inst/usr/lib/go/doc
	cp -a bin /root/bldr-inst/usr
	cp -a pkg /root/bldr-inst/usr/lib/go
	cp -a $GOROOT/src /root/bldr-inst/usr/lib/go/
	cp -a $GOROOT/lib /root/bldr-inst/usr/lib/go/


    # This is to make go get code.google.com/p/go-tour/gotour and
    # then running the gotour executable work out of the box.
	ln -sf /usr/bin /root/bldr-inst/usr/lib/go/bin

	cp -r misc/ /root/bldr-inst/usr/lib/go/

    # For godoc
	install -Dm644 favicon.ico /root/bldr-inst/usr/lib/go/favicon.ico

	install -Dm644 VERSION /root/bldr-inst/usr/lib/go/VERSION

	# Clean Windows specific files.
	rm -f /root/bldr-inst/usr/lib/go/src/*.bat


}

#Default HTTP curl new version detection
function Detect
{
	LISTURL=https://golang.org/dl/
	FILELIST=`GetFileList`
	LATEST=0

	for i in ${FILELIST[@]};
	do
			CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
			vercomp $LATEST $CURVER
			if [ $? -eq 2 ];
			then
					LATEST=$CURVER
			fi
	done

	vercomp $VERSION $LATEST
	if [ $? -eq 2 ];
	then
			echo "$NAME: New Version Available! - $LATEST"
	fi
}

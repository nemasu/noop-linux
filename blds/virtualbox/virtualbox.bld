NAME=virtualbox
VERSION=4.3.28
DVERSION=4.3.28
ISUSR=1
SRC=http://download.virtualbox.org/virtualbox/${DVERSION}/VirtualBox-${DVERSION}.tar.bz2
EXTRACONF=
ISSPECIAL=1
DEPS=('libidl' 'cdrkit' 'iasl' 'curl' 'gcc-libs' 'glibc' 'libX11' 'libXcursor' 'libXext' 'libXinerama' 'libXmu' 'libXt' 'libpng' 'libvpx' 'libxml2' 'mesalib' 'openssl' 'python2' 'qt4' 'sdl' 'zlib')
#Note! You need to have the correct kernel in /usr/src/linux and at least started to bulid it (for autoconf.h)
PKGDEPS=('iasl' 'cdrkit' 'libidl')
RESTORELIBDB=1

function BuildAndInstall
{
	sed -i 's/^check_gcc$/#check_gcc/' configure

	if [ ! -e makeself ];
	then
		ln -s /bin/echo makeself
	fi
    
	export PATH="$CWD:$PATH"

	mv -v $BLDRTMPDIR/LocalConfig.kmk .

	./configure --disable-docs --disable-java --enable-vde --enable-vnc
	source ./env.sh

	kmk all

    pushd src/VBox/RDP/client* >/dev/null
    kmk
    popd >/dev/null

    pushd src/VBox/ExtPacks/VNC >/dev/null
    kmk packing
    popd >/dev/null

	#outputs to out/linux.{amd64,x86}/release/bin
	if [ `uname -m` == "i686" ];
    then
        pushd out/linux.x86/release/bin
    else
        pushd out/linux.amd64/release/bin
    fi

	#directories (copy stuff)
	install -dm755 /root/bldr-inst/usr/{bin,lib/virtualbox/components,lib/virtualbox/ExtensionPacks,share/virtualbox/nls,share/virtualbox/rdesktop-vrdp-keymaps}

	#wrappers
	install -m 0755 VBox.sh /root/bldr-inst/usr/bin/VBox

	for i in VBoxHeadless VBoxManage VBoxSDL VirtualBox vboxwebsrv VBoxBalloonCtrl; do
        ln -sf VBox /root/bldr-inst/usr/bin/$i
        ln -sf VBox /root/bldr-inst/usr/bin/${i,,}
    done

	install -m 0755 VBoxTunctl /root/bldr-inst/usr/bin	

	#libs
	install -m 0755 components/* -t /root/bldr-inst/usr/lib/virtualbox/components

	install -m 0755 *.so /root/bldr-inst/usr/lib/virtualbox
    install -m 0644 *.gc *.r0  VBoxEFI*.fd /root/bldr-inst/usr/lib/virtualbox

#vb 5	
#install -m 0644 *.rc *.r0  VBoxEFI*.fd /root/bldr-inst/usr/lib/virtualbox

	#binaries
	install -m 4755 VBoxSDL VirtualBox VBoxHeadless VBoxNetDHCP VBoxNetAdpCtl -t /root/bldr-inst/usr/lib/virtualbox
    
	install -m 0755 VBoxManage VBoxSVC VBoxExtPackHelperApp VBoxXPCOMIPCD VBoxTestOGL VBoxBalloonCtrl -t /root/bldr-inst/usr/lib/virtualbox

	#language
	install -m 0755 nls/*.qm -t /root/bldr-inst/usr/share/virtualbox/nls

	#some useless stuff
	install -m 0755 VBoxCreateUSBNode.sh VBoxSysInfo.sh -t /root/bldr-inst/usr/share/virtualbox

	#icons
	install -D -m 0644 VBox.png /root/bldr-inst/usr/share/pixmaps/VBox.png

	pushd icons
    for i in *; do
        install -d /root/bldr-inst/usr/share/icons/hicolor/$i/mimetypes
        cp $i/* /root/bldr-inst/usr/share/icons/hicolor/$i/mimetypes
    done

	popd

	#desktop
	install -D -m 0644 virtualbox.desktop /root/bldr-inst/usr/share/applications/virtualbox.desktop
    install -D -m 0644 virtualbox.xml /root/bldr-inst/usr/share/mime/packages/virtualbox.xml

	#config
	mkdir -p /root/bldr-inst/etc/vbox
    echo "INSTALL_DIR=/usr/lib/virtualbox" > /root/bldr-inst/etc/vbox/vbox.cfg
	
	popd

	PushScripts	

	#virtualbox-guest-additions package----------------------------------------------------------------------
	if [ `uname -m` == "i686" ];
    then
        pushd out/linux.x86/release/bin/additions
    else
        pushd out/linux.amd64/release/bin/additions
    fi
	
	
	install -d /root/guest-inst/{usr/bin,sbin}
	install -m755 VBoxClient VBoxControl VBoxService /root/guest-inst/usr/bin
	install -m755 mount.vboxsf /root/guest-inst/sbin

	install -m755 -D ../../../../../src/VBox/Additions/x11/Installer/98vboxadd-xclient \
        /root/guest-inst/usr/bin/VBoxClient-all
    install -m755 -D ../../../../..//src/VBox/Additions/x11/Installer/vboxclient.desktop \
        /root/guest-inst/etc/xdg/autostart/vboxclient.desktop
    install -D vboxvideo_drv_117.so \
        /root/guest-inst/usr/lib/xorg/modules/drivers/vboxvideo.so
    install -d /root/guest-inst/usr/lib/xorg/modules/dri
    install -m755 VBoxOGL*.so /root/guest-inst/usr/lib
    ln -s /usr/lib/VBoxOGL.so /root/guest-inst/usr/lib/xorg/modules/dri/vboxvideo_dri.so
    install -m755 -D pam_vbox.so /root/guest-inst/usr/lib/security/pam_vbox.so

	mkdir -p /root/guest-inst/usr/lib/udev/rules.d/

cat <<EOF >> /root/guest-inst/usr/lib/udev/rules.d/60-vboxguest.rules
ACTION=="add", KERNEL=="vboxguest", SUBSYSTEM=="misc", OWNER="root", MODE="0600"
ACTION=="add", KERNEL=="vboxuser", SUBSYSTEM=="misc", OWNER="root", MODE="0666"
EOF

	mkdir -p /root/guest-inst/etc/systemd/system/

cat <<EOF >> /root/guest-inst/etc/systemd/system/vboxservice.service
[Unit]
Description=VirtualBox Guest Service
ConditionVirtualization=oracle

[Service]
ExecStart=/usr/bin/VBoxService -f

[Install]
WantedBy=multi-user.target
EOF


	pushd /root/guest-inst

	pkgr -genmeta virtualbox-guest-additions $VERSION
	pkgr -genpkg
	mv *.pkg /root/bldr-done

	popd

	rm -rf /root/guest-inst

	popd
	
	#virtualbox-modules package------------------------------------------------------------------------------
	echo "depmod" > /tmp/bldr/postinst
	echo "depmod" > /tmp/bldr/postup

	if [ `uname -m` == "i686" ];
	then
		pushd out/linux.x86/release/bin/src
	else
		pushd out/linux.amd64/release/bin/src
	fi

	make -j${BLDR_CORES}

	KERVER=`uname -r`
	mkdir -p /root/mod-inst/lib/modules/${KERVER}/misc

	#install host mods
	for i in vboxdrv.ko vboxnetadp.ko vboxnetflt.ko vboxpci.ko;
	do
		install -m 644 $i /root/mod-inst/lib/modules/${KERVER}/misc
	done

	popd


	#guest mods
	mkdir -p /root/mod-bld
	src/VBox/Additions/linux/export_modules /root/mod-bld/guest_mods.tar.gz

	pushd /root/mod-bld
	tar xf guest_mods.tar.gz
	rm guest_mods.tar.gz
	make -j${BLDR_CORES}
	mv *.ko /root/mod-inst/lib/modules/${KERVER}/misc
	popd

	rm -rf /root/mod-bld


	pushd /root/mod-inst
	mkdir -p etc/modules-load.d
cat <<EOF >> etc/modules-load.d/virtualbox.conf
vboxnetadp
vboxdrv
vboxnetflt
vboxsf
vboxvideo
vboxguest
vboxpci
EOF

	pkgr -genmeta virtualbox-modules $VERSION
	pkgr -genpkg
	mv *.pkg /root/bldr-done
	popd

	rm -rf /root/mod-inst

	PopScripts
}

function Detect
{
        LATEST=`curl -s http://download.virtualbox.org/virtualbox/LATEST.TXT`
		
		vercomp $VERSION $LATEST
        if [ $? -eq 2 ];
        then
                echo "$NAME: New Version Available! - $LATEST"
        fi
}


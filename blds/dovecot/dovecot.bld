#package name
NAME=dovecot

#package version
VERSION=2.2.19

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=http://dovecot.org/releases/2.2/dovecot-${VERSION}.tar.gz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
ISSPECIAL=1

# build/package dependancies
DEPS=

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=1

function BuildAndInstall
{
  
  ./configure --prefix=/usr --sysconfdir=/etc \
    --sbindir=/usr/bin \
    --localstatedir=/var \
	--libexecdir=/usr/lib \
  	--with-moduledir=/usr/lib/dovecot/modules \
  	--with-systemdsystemunitdir=/usr/lib/systemd/system \
	--disable-static \
	--with-nss \
	--with-pam \
	--with-mysql \
	--with-pgsql \
	--with-sqlite \
	--with-ssl=openssl \
	--with-ssldir=/etc/ssl \
	--with-gssapi \
	--with-ldap=plugin \
	--with-zlib \
	--with-bzlib \
	--with-lzma \
	--with-lz4 \
	--with-libcap \
	--with-docs #--help
  make -j3
	
  make DESTDIR=/root/bldr-inst install

  # install example conf files and ssl.conf
  install -d -m755 /root/bldr-inst/etc/dovecot/conf.d
  install -m 644 /root/bldr-inst/usr/share/doc/dovecot/example-config/dovecot.conf /root/bldr-inst/etc/dovecot/dovecot.conf.sample
  install -d -m755 /root/bldr-inst/etc/ssl
  install -m 644  doc/dovecot-openssl.cnf /root/bldr-inst/etc/ssl/dovecot-openssl.cnf.sample
  
  # install mkcert helper script
  install -m 755  doc/mkcert.sh /root/bldr-inst/usr/lib/dovecot/mkcert.sh
  rm /root/bldr-inst/etc/dovecot/README
  
}

#Default HTTP curl new version detection
function Detect
{
	LISTURL=http://dovecot.org/releases/2.2/
	FILELIST=`GetFileList`
	LATEST=0

	for i in ${FILELIST[@]};
	do
			CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
			vercomp $LATEST $CURVER
			if [ $? -eq 2 ];
			then
					LATEST=$CURVER
			fi
	done

	vercomp $VERSION $LATEST
	if [ $? -eq 2 ];
	then
			echo "$NAME: New Version Available! - $LATEST"
	fi
}


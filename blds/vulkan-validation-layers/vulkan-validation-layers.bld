#package name
NAME=vulkan-validation-layers

#Description
DESC="Vulkan Validation Layers"

#package version
VERSION=1.1.100

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=https://github.com/KhronosGroup/Vulkan-ValidationLayers/archive/v${VERSION}.tar.gz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#autotools, python, perl, cmake, custom
BUILD=custom

# build/package dependancies
DEPS=('gcc-libs' 'glibc')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
	rm -rf build ; mkdir build ; cd build
	../scripts/update_deps.py
	cmake -C helper.cmake \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DCMAKE_INSTALL_LIBDIR=lib \
		-DCMAKE_INSTALL_SYSCONFDIR=/etc \
		-DCMAKE_INSTALL_DATADIR=/share \
		-DCMAKE_INSTALL_INCLUDEDIR="/usr/include/vulkan/" \
		-DCMAKE_SKIP_RPATH=True \
		-DBUILD_TESTS=Off \
		-DBUILD_WSI_XCB_SUPPORT=On \
		-DBUILD_WSI_XLIB_SUPPORT=On \
		-DBUILD_WSI_WAYLAND_SUPPORT=On \
		-DCMAKE_BUILD_TYPE=Release \
		..
	make -j${BLDR_CORES}
	make DESTDIR=/root/bldr-inst install
}

function Detect() {
    LISTURL=
    FILELIST=`GetFileList`
    LATEST=0

    for i in ${FILELIST[@]};
    do
        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
        vercomp $LATEST $CURVER
        if [ $? -eq 2 ];
        then
                        LATEST=$CURVER
        fi
    done

    vercomp $VERSION $LATEST
    if [ $? -eq 2 ];
    then
        echo "$NAME: New Version Available! - $LATEST"
    fi
}

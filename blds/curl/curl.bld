#package name
NAME=curl

#Description
DESC="An URL retrieval utility and library"

#package version
VERSION=7.37.1-1
DVERSION=7.37.1

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC="http://curl.haxx.se/download/curl-${DVERSION}.tar.gz"

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# build/package dependancies
DEPS=('e2fsprogs' 'glibc' 'krb5' 'libssh2' 'openldap' 'openssl' 'rtmpdump' 'zlib')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
  
  ./configure \
      --prefix=/usr \
      --mandir=/usr/share/man \
      --enable-ldap \
      --enable-ldaps \
      --enable-ipv6 \
      --enable-manual \
      --enable-versioned-symbols \
      --enable-threaded-resolver \
      --with-gssapi \
      --without-libidn \
      --with-random=/dev/urandom \
      --with-ca-bundle=/etc/ssl/certs/ca-certificates.crt
  make -j${BLDR_CORES}
  make DESTDIR=/root/bldr-inst install
}

#Default HTTP curl new version detection
function Detect
{
        LISTURL=http://curl.haxx.se/download/
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                                        vercomp $LATEST $CURVER
                                        if [ $? -eq 2 ];
                                        then
                                                                        LATEST=$CURVER
                                        fi
        done

        vercomp $DVERSION $LATEST
        if [ $? -eq 2 ];
        then
                                        echo "$NAME: New Version Available! - $LATEST"
        fi
}


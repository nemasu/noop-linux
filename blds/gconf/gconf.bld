#package name
NAME=gconf

#Description
DESC="A configuration database system"

#package version
VERSION=3.2.6

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
MM=`echo $VERSION | sed -e 's/\([0-9].*\.[0-9]*\)\.[0-9]*/\1/'`
SRC=http://ftp.gnome.org/pub/GNOME/sources/GConf/$MM/GConf-${VERSION}.tar.xz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# build/package dependancies
DEPS=('dbus' 'dbus-glib' 'glib2' 'glibc' 'libcap2' 'libffi' 'libgcrypt' 'libgpg-error' 'libxml2' 'openldap' 'openssl1.0' 'pcre' 'polkit' 'sasl' 'systemd' 'xz' 'zlib')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
   # Python2 fix
        sed -i '1s|#!/usr/bin/env python$|&2|' gsettings/gsettings-schema-convert

        ./configure --prefix=/usr --sysconfdir=/etc \
                --localstatedir=/var --libexecdir=/usr/lib/GConf \
                --disable-static --enable-defaults-service --with-gtk=2.0 \
                --disable-orbit

        make pkglibdir=/usr/lib/GConf
        make DESTDIR=/root/bldr-inst install

}

#Default HTTP curl new version detection
function Detect
{
         MAJOR=`curl -s http://ftp.gnome.org/pub/GNOME/sources/GConf/| grep -E '"[0-9\.]*/' | sed -e 's/.*"\([0-9\.]*\)\/.*/\1/g' | tail -n1`
         LATEST=`curl -s http://ftp.gnome.org/pub/GNOME/sources/GConf/$MAJOR/ | grep "LATEST-IS-" | sed -e 's/.*LATEST-IS-\([0-9\.]*\)<.*/\1/g'`

        vercomp $VERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
                }

#package name
NAME=lib32-fcitx

#Description
DESC="A fast terminal emulator for linux with frame buffer device or VESA video card"

#package version
VERSION=4.2.8.4

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=http://download.fcitx-im.org/fcitx/fcitx-${VERSION}_dict.tar.xz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# build/package dependancies
DEPS=('gcc-libs' 'lib32-dbus' 'lib32-glib2' 'lib32-glibc' 'lib32-gtk+2' 'lib32-libX11' 'lib32-pango' 'lib32-qt4')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
  srcdir=`pwd`

  mkdir -p QtCore
  mv -v $BLDRTMPDIR/*.h QtCore

  export CC="gcc -m32 -I$srcdir -I$srcdir/QtCore"
  export CXX="g++ -m32 -I$srcdir -I$srcdir/QtCore"
  export PKG_CONFIG_PATH='/usr/lib32/pkgconfig'

  mkdir -p build
  cd build
 
    cmake .. \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DLIB_INSTALL_DIR=/usr/lib32 \
    -DQT_QMAKE_EXECUTABLE=qmake4 \
    -DENABLE_OPENCC=OFF \
    -DFORCE_PRESAGE=ON \
    -DENABLE_GIR=OFF \
    -DENABLE_LIBXML2=OFF \
    -DENABLE_QT_IM_MODULE=ON
  
  (cd src/lib && make && make DESTDIR=/root/bldr-inst install)
  (cd src/frontend/qt && make && make DESTDIR=/root/bldr-inst install)
  (cd src/frontend/gtk2 && make && make DESTDIR=/root/bldr-inst install)

  rm -rf /root/bldr-inst/usr/include
  cp -r /root/bldr-inst/usr/lib/* /root/bldr-inst/usr/lib32/ && rm -rf /root/bldr-inst/usr/lib
}

#Default HTTP curl new version detection
function Detect
{
        LISTURL=http://download.fcitx-im.org/fcitx/
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $VERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

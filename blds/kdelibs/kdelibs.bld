#package name
NAME=kdelibs

#Description
DESC="The KDE Library"

#package version
VERSION=4.14.38

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=http://download.kde.org/stable/applications/17.08.3/src/kdelibs-$VERSION.tar.xz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#autotools, perl, cmake, custom
BUILD=custom

# build/package dependancies
DEPS=('acl' 'aspell' 'attica-qt4' 'attr' 'e2fsprogs' 'enchant' 'gamin' 'gcc-libs' 'giflib' 'glibc' 'jasper' 'krb5' 'libICE' 'libSM' 'libX11' 'libXScrnSaver' 'libXau' 'libXcursor' 'libXdmcp' 'libXext' 'libXfixes' 'libXft' 'libXpm' 'libXrender' 'libXtst' 'libdbusmenu-qt' 'libjpeg' 'libpng' 'libutempter' 'libxml2' 'libxslt' 'pcre' 'phonon' 'polkit-qt' 'qca' 'qt4' 'strigi' 'systemd' 'xz' 'zlib')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
        mkdir -p build && cd build
        cmake .. \
                -DCMAKE_BUILD_TYPE=Release \
                -DKDE4_BUILD_TESTS=OFF \
                -DCMAKE_SKIP_RPATH=ON \
                -DKDE_DISTRIBUTION_TEXT='noop Linux' \
                -DCMAKE_INSTALL_PREFIX=/usr \
                -DSYSCONF_INSTALL_DIR=/etc \
                -DDOCBOOKXML_CURRENTDTD_DIR=/usr/share/xml/docbook/xml-dtd-4.5 \
                -DLOCALE_INSTALL_DIR=/usr/share/locale/kde4 \
                -DKDE_DEFAULT_HOME='.kde4' \
                -DWITH_FAM=OFF \
                -DWITH_SOLID_UDISKS2=ON
        make -j${BLDR_CORES}
        make DESTDIR=/root/bldr-inst install
        rm -f /root/bldr-inst/usr/share/apps/kssl/ca-bundle.crt
        ln -sf /etc/ssl/certs/ca-certificates.crt /root/bldr-inst/usr/share/apps/kssl/ca-bundle.crt
}

#Default HTTP curl new version detection
function Detect
{
        LISTURL=http://download.kde.org/stable/applications/${VERSION}/src/
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $VERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

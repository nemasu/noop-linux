#package name
NAME=krb5

#Description
DESC="The Kerberos network authentication system"

#package version
VERSION=1.14

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=http://web.mit.edu/kerberos/dist/krb5/${VERSION:0:4}/krb5-${VERSION}.tar.gz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# build/package dependancies
DEPS=('e2fsprogs' 'glibc' 'openldap' 'openssl')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=('e2fsprogs')

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
        cd src
        ./configure --prefix=/usr \
               --sbindir=/usr/bin \
               --sysconfdir=/etc \
               --localstatedir=/var/lib \
               --enable-shared \
               --with-system-et \
               --with-system-ss \
               --disable-rpath \
               --without-tcl \
               --enable-dns-for-realm \
               --with-ldap \
               --without-system-verto
        make -j${BLDR_CORES}

        make DESTDIR=/root/bldr-inst EXAMPLEDIR=/usr/share/doc/krb5/examples install
        install -m 644 plugins/kdb/ldap/libkdb_ldap/kerberos.{ldif,schema} /root/bldr-inst/usr/share/doc/krb5/examples

        install -dm 755 /root/bldr-inst/var/lib/krb5kdc
        install -pm 644 config-files/kdc.conf /root/bldr-inst/var/lib/krb5kdc/kdc.conf

        install -dm 755 /root/bldr-inst/etc
    install -pm 644 config-files/krb5.conf /root/bldr-inst/etc/krb5.conf

        install -dm 755 /root/bldr-inst/usr/share/aclocal
    install -m 644 util/ac_check_krb5.m4 /root/bldr-inst/usr/share/aclocal
}

function Detect
{
        LATEST=`curl -s "http://web.mit.edu/kerberos/dist/" | grep -E "krb5-[0-9\.]*.tar" | sed 's/.*krb5-\([0-9\.]*\).tar.*/\1/g' | sort | uniq | tail -n1`

        vercomp $VERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

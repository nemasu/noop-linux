#package name
NAME=libc++

#Description
DESC="A new implementation of the C++ standard library, targeting C++11."

#package version
VERSION=5.0.1

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#autotools, python, perl, cmake, custom
BUILD=custom

# build/package dependancies
DEPS=('gcc-libs' 'glibc')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
    wget https://releases.llvm.org/$VERSION/llvm-$VERSION.src.tar.xz
    wget https://releases.llvm.org/$VERSION/libcxx-$VERSION.src.tar.xz
    wget https://releases.llvm.org/$VERSION/libcxxabi-$VERSION.src.tar.xz

    tar xf llvm-$VERSION.src.tar.xz
    cd llvm-${VERSION}.src
    mkdir -p projects/libcxx projects/libcxxabi
    cd projects/libcxx
    tar xf ../../../libcxx-$VERSION.src.tar.xz
    mv libcxx-${VERSION}.src/* .
    cd ../libcxxabi
    tar xf ../../../libcxxabi-$VERSION.src.tar.xz
    mv libcxxabi-${VERSION}.src/* .
    cd ../../
    mkdir build && cd build
    
    CC=clang CXX=clang++ cmake .. \
        -G "Unix Makefiles" \
        -DLIBCXX_ENABLE_EXPERIMENTAL_LIBRARY=On \
        -DLIBCXX_INSTALL_EXPERIMENTAL_LIBRARY=Off \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr
    make -j${BLDR_CORES} cxx cxx_experimental
    make DESTDIR=/root/bldr-inst install-libcxx install-libcxxabi 
    install -Dm644 lib/libc++experimental.a /root/bldr-inst/usr/lib/libc++experimental.a
}

#Default HTTP curl new version detection
function Detect
{
        LISTURL=
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $VERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

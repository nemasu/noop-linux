#package name
NAME=kdevplatform

#Description
DESC="Development platform for kdevelop"

#package version
VERSION=5.0.1

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
#SRC=http://download.kde.org/stable/kdevelop/$VERSION/src/kdevplatform-${VERSION}.tar.bz2
SRC=http://download.kde.org/stable/kdevelop/$VERSION/src/kdevplatform-${VERSION}.tar.xz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#autotools, perl, cmake, custom
BUILD=cmake

# build/package dependancies
DEPS=('apr' 'apr-util' 'attica' 'gcc-libs' 'glibc' 'grantlee' 'karchive' 'kauth' 'kbookmarks' 'kcmutils' 'kcodecs' 'kcompletion' 'kconfig' 'kconfigwidgets' 'kcoreaddons' 'kdeclarative' 'kguiaddons' 'ki18n' 'kiconthemes' 'kio' 'kitemmodels' 'kitemviews' 'kjobwidgets' 'knewstuff' 'knotifications' 'knotifyconfig' 'kpackage' 'kparts' 'kservice' 'ktexteditor' 'ktextwidgets' 'kwidgetsaddons' 'kwindowsystem' 'kxmlgui' 'libkomparediff2' 'qt' 'qt-webkit' 'solid' 'sonnet' 'subversion' 'threadweaver')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

#function BuildAndInstall
#{
#}

#Default HTTP curl new version detection
function Detect
{
	LATEST_KDEV=`curl -s -L http://download.kde.org/stable/kdevelop/ | egrep "[0-9\.]+\/" | tail -n1 | sed -e 's/.*href="\([0-9\.]*\)\/">.*/\1/g'`

	LISTURL=http://download.kde.org/stable/kdevelop/${LATEST_KDEV}/src/
	FILELIST=`GetFileList`                                                                                                                                               
	LATEST=0                                                                                                                                                             
																																										 
	for i in ${FILELIST[@]};                                                                                                                                             
	do                                                                                                                                                                   
					CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`                                                                                           
					vercomp $LATEST $CURVER                                                                                                                              
					if [ $? -eq 2 ];                                                                                                                                     
					then                                                                                                                                                 
									LATEST=$CURVER                                                                                                                       
					fi                                                                                                                                                   
	done          

	vercomp $VERSION $LATEST
	if [ $? -eq 2 ];
	then
			echo "$NAME: New Version Available! - $LATEST"
	fi
}

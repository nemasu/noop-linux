#package name
NAME=wine

#Description
DESC="A compatibility layer for running Windows programs"

#package version
VERSION=3.3
DVERSION=3.3
STAGING_VER=${DVERSION}

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=http://ftp.winehq.org/pub/wine/source/3.x/wine-${DVERSION}.tar.xz

#xD

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# 'no' to skip calls to strip
STRIP=

DEPS=('alsa-lib' 'gcc-libs' 'glib2' 'glibc' 'gst-plugins-base' 'gstreamer' 'lcms2' 'lib32-alsa-lib' 'lib32-glib2' 'lib32-glibc' 'lib32-gst-plugins-base' 'lib32-gstreamer' 'lib32-lcms2' 'lib32-libX11' 'lib32-libXext' 'lib32-libxml2' 'lib32-openal' 'lib32-openldap' 'lib32-pulseaudio' 'lib32-systemd' 'lib32-zlib' 'libX11' 'libXext' 'libexif' 'libgphoto2' 'libxml2' 'openldap' 'pulseaudio' 'systemd' 'zlib')

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=1


function BuildAndInstall
{
        if [ -z "$BLDR_CONTINUE" ]; then
            cd ..
            mv `ls` wine
            mkdir -p {wine32-build,wine64-build}

            #Let's try staging!
            STG_URL=https://github.com/wine-staging/wine-staging/archive/v${STAGING_VER}.tar.gz
            wget ${STG_URL}
            tar xf *.gz
            rm *.gz
            cd wine-staging-*
            cd patches
            ./patchinstall.sh DESTDIR=../../wine --all
            cd ../../
        fi;
        
        if [[ "${ARCH}" == "x86_64" ]];
        then

                cd wine64-build
                ../wine/configure \
                  --prefix=/usr \
                  --sysconfdir=/etc \
                  --libdir=/usr/lib \
                  --with-x \
				  --with-gstreamer \
                  --enable-win64

                make -j${BLDR_CORES}

                _wine32opts=(
                  --libdir=/usr/lib32
                  --with-wine64="/root/bldr-tmp/wine64-build"
                )

                export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"
                cd ..
        fi

  cd wine32-build
  ../wine/configure \
    --prefix=/usr \
    --sysconfdir=/etc \
    --with-x \
	--with-gstreamer \
        "${_wine32opts[@]}"

        make -j${BLDR_CORES}

        if [[ "${ARCH}" == "i686" ]]; then
			make prefix=/root/bldr-inst/usr install
        else
            cd ../wine32-build
            make prefix=/root/bldr-inst/usr \
                libdir=/root/bldr-inst/usr/lib32 \
                dlldir=/root/bldr-inst/usr/lib32/wine install

            cd ../wine64-build
            make prefix=/root/bldr-inst/usr \
                libdir=/root/bldr-inst/usr/lib \
                dlldir=/root/bldr-inst/usr/lib/wine install
        fi
}


#Default HTTP curl new version detection
function Detect
{
        LISTURL=http://sourceforge.net/projects/wine/files/Source/
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $DVERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

#package name
NAME=appstream-glib

#Description
DESC="Objects and methods for reading and writing AppStream metadata"

#package version
VERSION=0.7.14

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#autotools, python, perl, cmake, custom
BUILD=custom

# build/package dependancies
DEPS=('cairo' 'fontconfig' 'freetype2' 'gdk-pixbuf' 'glib2' 'glibc' 'gtk+' 'json-glib' 'libarchive' 'libsoup' 'libyaml' 'pango' 'snowball' 'util-linux')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
	if [ ! -e appstream-glib ]; then
		git clone --recursive https://github.com/hughsie/appstream-glib
		cd appstream-glib
		git checkout appstream_glib_${VERSION//./_}
		cd ..
	fi
	cd appstream-glib
	
	meson-wrap . build \
		-D gtk-doc=false \
		-D rpm=false

	ninja -C build
	DESTDIR=/root/bldr-inst ninja -C build install
}
function Detect() {
    LISTURL=
    FILELIST=`GetFileList`
    LATEST=0

    for i in ${FILELIST[@]};
    do
        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
        vercomp $LATEST $CURVER
        if [ $? -eq 2 ];
        then
                        LATEST=$CURVER
        fi
    done

    vercomp $VERSION $LATEST
    if [ $? -eq 2 ];
    then
        echo "$NAME: New Version Available! - $LATEST"
    fi
}


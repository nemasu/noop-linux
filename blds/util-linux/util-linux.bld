#package name
NAME=util-linux

#Description
DESC="Miscellaneous system utilities for Linux"

#package version
VERSION=2.27.1
DVERSION=2.27.1

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
BASE=`echo ${DVERSION} | sed -e 's/\([0-9]*\.[0-9]*\).*/\1/g'`
SRC=http://www.kernel.org/pub/linux/utils/util-linux/v${BASE}/util-linux-${DVERSION}.tar.xz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# build/package dependancies
DEPS=('glibc' 'libcap-ng' 'libcap2' 'libgcrypt' 'libgpg-error' 'linux-pam' 'lz4' 'ncurses' 'python' 'systemd' 'xz' 'zlib')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

export PKG_CONFIG_PATH=/usr/lib/pkgconfig:/lib/pkgconfig

function BuildAndInstall
{
        ./configure $STDUSRCONF
    make -j${BLDR_CORES}
        make DESTDIR=/root/bldr-inst install

        #use shadow's su
        rm /root/bldr-inst/usr/bin/su

        #use shadow's login
        rm /root/bldr-inst/usr/bin/login

        #use procps's kill
        rm /root/bldr-inst/usr/bin/kill

}

#Default HTTP curl new version detection
function Detect
{
        BASE=`curl -L -s "https://www.kernel.org/pub/linux/utils/util-linux/" | grep -E "v[0-9\.]*" | tail -n1 | sed -e 's/.*v\([0-9\.]*\)\/.*/\1/g'`
        LISTURL="https://www.kernel.org/pub/linux/utils/util-linux/v${BASE}/"
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $DVERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

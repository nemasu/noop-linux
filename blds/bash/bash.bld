#package name
NAME=bash

#Description
DESC="The GNU Bourne Again shell"

#package version
VERSION=4.3.46
DVERSION=4.3

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=http://ftp.gnu.org/gnu/bash/bash-${DVERSION}.tar.gz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# build/package dependancies
DEPS=

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
        #Patching Fun!
        PATCH_LIST=`curl -s http://ftp.gnu.org/gnu/bash/bash-4.3-patches/ | sed -e '/\.sig/d' | grep -E "bash43-[0-9]*" | sed -e 's/.*\(bash43-[0-9]*\)<.*/\1/g'`
        for i in ${PATCH_LIST[@]};
        do
                curl -s http://ftp.gnu.org/gnu/bash/bash-4.3-patches/$i | patch -p0
        done

        #Build
        ./configure $STDUSRCONF --enable-static-link --without-bash-malloc --disable-nls
        make -j${BLDR_CORES}
        make DESTDIR=/root/bldr-inst install
}

#Default HTTP curl new version detection
function Detect
{
        LISTURL=ftp://ftp.gnu.org/gnu/bash/
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $DVERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

#package name
NAME=libreoffice

#Description
DESC="Office suite"

#package version
VERSION=5.2.3.3
DVERSION=5.2.3.3

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
MM=`echo $DVERSION | sed -e 's/\([0-9]\.[0-9]\.[0-9]\)\..*/\1/g'`
SRC=http://download.documentfoundation.org/libreoffice/src/$MM/libreoffice-${DVERSION}.tar.xz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# build/package dependancies
DEPS=('bluez' 'unzip' 'glm' 'perl-archive-zip' 'atk' 'cairo' 'cups' 'curl' 'dbus' 'dbus-glib' 'dconf' 'e2fsprogs' 'expat' 'fontconfig' 'freetype2' 'gcc-libs' 'gdk-pixbuf' 'glib2' 'glibc' 'gst-plugins-base' 'gstreamer' 'gtk+2' 'krb5' 'lcms2' 'libICE' 'libSM' 'libX11' 'libXext' 'libXinerama' 'libXrandr' 'libXrender' 'libfbclient' 'libgcrypt' 'libgpg-error' 'libjpeg' 'libpng' 'libxml2' 'libxslt' 'mesalib' 'neon' 'nspr' 'nss' 'openssl' 'pango' 'python' 'xz' 'zlib')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=('perl-archive-zip' 'glm' 'zip' 'unzip' 'bluez')

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=1

function BuildAndInstall
{

	# Google API keys (see http://www.chromium.org/developers/how-tos/api-keys)                                                                                                                                         
    # Note: These are for noop Linux use ONLY. For your own distribution, please                                                                                                                                        
    # get your own set of keys. Feel free to contact chromium@nooplinux.org for                                                                                                                                         
    # more information.                                                                                                                                                                                                 
    _google_default_client_id=89099530172.apps.googleusercontent.com                                                                                                                                                    
    _google_default_client_secret=edER2v0My77GhaBaUcdj7dQQ                     


	#Make sure tests dont fail
	# Start virtual X 
	# Needs to be 24 bit, otherwise emf tests fail 
	Xvfb :3 -screen 0 1280x1024x24 & 
	X_PID=$! 
	OLD_DISPLAY=$DISPLAY
	export DISPLAY=:3 

	export PYTHON=python2
	export PTHREAD_LIBS="-pthread"
	./autogen.sh --prefix=/usr \
		--disable-gtk3 \
		--with-system-zlib --with-system-openssl --with-system-jpeg \
		--with-system-expat --with-system-lcms2 --with-system-libxml \
		--without-system-icu --with-system-firebird \
		--with-system-libpng --with-gssapi --without-java --without-doxygen \
		--with-system-cairo --without-system-boost \
		--with-system-headers --with-alloc=system --enable-split-app-modules \
		--without-system-mdds --without-system-sane \
		--enable-release-build=yes --with-system-nss --with-parallelism=${BLDR_CORES} \
		--with-system-neon \
		--with-gdrive-client-id=${_google_default_client_id} \
		--with-gdrive-client-secret=${_google_default_client_secret}

	make build
	make DESTDIR=/root/bldr-inst distro-pack-install

	kill $X_PID
	export DISPLAY=$OLD_DISPLAY

}

#Default HTTP curl new version detection
function Detect
{
	LISTURL=http://www.libreoffice.org/download/libreoffice-fresh
	FILELIST=`GetFileList`
	LATEST=0

	for i in ${FILELIST[@]};
	do
			CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
			vercomp $LATEST $CURVER
			if [ $? -eq 2 ];
			then
					LATEST=$CURVER
			fi
	done

	vercomp $DVERSION $LATEST
	if [ $? -eq 2 ];
	then
			echo "$NAME: New Version Available! - $LATEST"
	fi
}

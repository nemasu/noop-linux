#package name
NAME=libreoffice

#package version
VERSION=4.3.1.2

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
MM=`echo $VERSION | sed -e 's/\([0-9]\.[0-9]\.[0-9]\)\..*/\1/g'`
SRC=http://download.documentfoundation.org/libreoffice/src/$MM/libreoffice-${VERSION}.tar.xz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
ISSPECIAL=1

# build/package dependancies
DEPS=('perl-archive-zip' 'cups' 'openssl' 'libjpeg' 'expat' 'lcms2' 'libxml2' 'icu4c' 'mesalib' 'gettext' 'libpng' 'librpcsecgss' 'gperf' 'cairo' 'libxslt' 'cups' 'zip' 'unzip' 'unixodbc' 'gtk+2' 'gstreamer0.10' 'gst-plugins-base0.10' 'libglu')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
	export PYTHON=python2
	export PTHREAD_LIBS="-pthread"
	./autogen.sh --prefix=/usr \
		--disable-gtk3 --disable-gnome-vfs --disable-gconf \
		--with-system-zlib --with-system-openssl --with-system-jpeg \
		--with-system-expat --with-system-lcms2 --with-system-libxml \
		--with-system-icu --with-system-mesa-headers --without-system-npapi-headers \
		--with-system-libpng --with-gssapi --without-java --without-doxygen \
		--enable-mergelibs --with-system-cairo --without-system-boost \
		--with-system-headers --with-alloc=system --enable-split-app-modules \
		--without-system-mdds --without-system-vigra --without-system-sane

	make -j3
	make DESTDIR=/root/bldr-inst distro-pack-install
}

#Default HTTP curl new version detection
function Detect
{
	LISTURL=http://www.libreoffice.org/download/libreoffice-fresh
	FILELIST=`GetFileList`
	LATEST=0

	for i in ${FILELIST[@]};
	do
			CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
			vercomp $LATEST $CURVER
			if [ $? -eq 2 ];
			then
					LATEST=$CURVER
			fi
	done

	vercomp $VERSION $LATEST
	if [ $? -eq 2 ];
	then
			echo "$NAME: New Version Available! - $LATEST"
	fi
}

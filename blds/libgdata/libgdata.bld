#package name
NAME=libgdata

#Description
DESC="GLib-based library for accessing online service APIs using the GData protocol"

#package version
VERSION=0.12.0-1
DVERSION=0.12.0
#VERSION=0.16.1

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=http://ftp.gnome.org/pub/gnome/sources/libgdata/${DVERSION:0:4}/libgdata-${DVERSION}.tar.xz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=autotools

# build/package dependancies
DEPS=('curl' 'dbus' 'glib2' 'glibc' 'libffi' 'libgcrypt' 'libgnome-keyring' 'libgpg-error' 'libidn' 'liboauth' 'libsoup' 'libxml2' 'openssl' 'pcre' 'sqlite' 'xz' 'zlib')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

#function BuildAndInstall
#{
#}

#Default HTTP curl new version detection
function Detect
{
        LISTURL=http://ftp.gnome.org/pub/gnome/sources/libgdata/${DVERSION:0:4}/
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $DVERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

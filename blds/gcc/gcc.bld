#!/bin/bash
# NAME
# VERSION
# ISUSR
# SRC
# POST,PRE
# EXTRAFILES
# ISSPECIAL

ARCH=`uname -m`
NAME=gcc
VERSION=5.2.0
ISUSR=1
SRC=ftp://ftp.gnu.org/gnu/gcc/gcc-${VERSION}/gcc-$VERSION.tar.bz2
EXTRACONF=
ISSPECIAL=1

function BuildAndInstall
{
 	[[ "`uname -m`" == "x86_64" ]] && sed -i '/m64=/s/lib64/lib/' gcc/config/i386/t-linux64

	# Do not run fixincludes
	sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in

	
	cd ..
    mkdir build-dir
    cd build-dir
    
	# This is raspberry pi, only ARM triplet supported at the moment
	[[ "$ARCH" == "armv6l" ]] && EXTRACONFIGFLAGS="--disable-multilib --host=armv6l-unknown-linux-gnueabihf --build=armv6l-unknown-linux-gnueabihf --with-arch=armv6 --with-float=hard --with-fpu=vfp"
	[[ "$ARCH" == "armv6l" ]] && ENABLED_LANGS="c,c++,fortran,go,lto,objc,obj-c++"

	[[ "$ARCH" == "x86_64" ]] && EXTRACONFIGFLAGS="--enable-multilib"
	[[ "$ARCH" == "x86_64" ]] && ENABLED_LANGS="c,c++,fortran,go,lto,objc,obj-c++,ada"

	export CFLAGS=${CFLAGS/-pipe/}
	export CXXFLAGS=${CXXFLAGS/-pipe/}
	
	../gcc-$VERSION/configure --prefix=/usr \
		  --libdir=/usr/lib --libexecdir=/usr/lib \
		  --mandir=/usr/share/man --infodir=/usr/share/info \
		  --with-bugurl=http://www.nooplinux.org/bugs/ \
		  --enable-languages=$ENABLED_LANGS \
		  --enable-shared --enable-threads=posix \
		  --with-system-zlib --enable-__cxa_atexit \
		  --enable-clocale=gnu \
		  --enable-gnu-unique-object --enable-linker-build-id \
		  --enable-cloog-backend=isl --disable-cloog-version-check \
		  --enable-lto --enable-plugin --enable-install-libiberty \
		  --with-linker-hash-style=gnu \
		  --disable-werror --enable-checking=release $EXTRACONFIGFLAGS
    
	
	make -j${BLDR_CORES}
    make DESTDIR=/root/bldr-inst install
	pushd .

	if [ $ARCH == "armv6l" ]; then
		ARCHMACH="armv6l-unknown"
		mkdir -p `pwd`/../../gcc-libs-inst/usr/lib/gcc/$ARCHMACH-linux-gnueabihf/$VERSION
		cd /root/bldr-inst
		mv -v usr/lib/gcc/$ARCHMACH-linux-gnueabihf/$VERSION/*.so* `pwd`/../gcc-libs-inst/usr/lib/gcc/$ARCHMACH-linux-gnueabihf/$VERSION/
		mv -v usr/lib/*.so* `pwd`/../gcc-libs-inst/usr/lib/
	elif [ $ARCH == "x86_64" ]; then
		ARCHMACH="x86_64-unknown"
		mkdir -p `pwd`/../../gcc-libs-inst/usr/lib/gcc/$ARCHMACH-linux-gnu/$VERSION
		cd /root/bldr-inst
		mv -v usr/lib/gcc/$ARCHMACH-linux-gnu/$VERSION/*.so* `pwd`/../gcc-libs-inst/usr/lib/gcc/$ARCHMACH-linux-gnu/$VERSION/
		mkdir -p `pwd`/../gcc-libs-inst/usr/lib
        mkdir -p `pwd`/../gcc-libs-inst/usr/lib32
        mv -v usr/lib/*.so* `pwd`/../gcc-libs-inst/usr/lib/
        mv -v usr/lib32/*.so* `pwd`/../gcc-libs-inst/usr/lib32/

	fi

	cd `pwd`/../gcc-libs-inst/

	mkdir -p usr/share/gdb/auto-load/usr/lib
	
	mv -v usr/lib/*.py usr/share/gdb/auto-load/usr/lib/
	
	echo Moving any lib64 contents to lib
	if [ -e ./lib64 ]; then
    	mkdir -p ./lib
	    cp -vr ./lib64/* ./lib/
    	rm -rf ./lib64
	fi

	if [ -e ./usr/lib64 ]; then
    	mkdir -p ./usr/lib
	    cp -vr ./usr/lib64/* ./usr/lib/
    	rm -rf ./usr/lib64
	fi

	set +e
	echo "Stripping libs and binaries..."
	find {,usr/}{bin,lib,sbin} -type f -exec strip --strip-debug '{}' ';'
	find {,usr/}{bin,sbin} -type f -exec strip --strip-all '{}' ';'
	set -e

	pkgr -genmeta gcc-libs $VERSION
	pkgr -genpkg
	mv -v *.pkg /root/bldr-done
	cd ..
	rm -rf gcc-libs-inst/
	
	popd

}

function Detect
{
        LATEST=`curl -L -s ftp://ftp.gnu.org/gnu/gcc/ | awk '{print $9;}' | egrep "gcc-[0-9\.][0-9\.]*" | tail -n1`

        vercomp $VERSION $LATEST
        if [ $? -eq 2 ];
        then
                echo "$NAME: New Version Available! - $LATEST"
        fi
}


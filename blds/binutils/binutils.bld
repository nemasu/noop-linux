#package name
NAME=binutils

#Description
DESC="A set of programs to assemble and manipulate binary and object files"

#package version
VERSION=2.29.1
DVERSION=2.29.1

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=ftp://ftp.gnu.org/gnu/binutils/binutils-${DVERSION}.tar.bz2

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# build/package dependancies
DEPS=('bison' 'flex' 'glibc')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=('bison' 'flex')

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{

        mkdir -p ../binutils-build
        cd ../binutils-build

        ../binutils-$DVERSION/configure  \
                        --prefix=/usr           \
                        --disable-werror        \
                        --libdir=/usr/lib       \
                        --enable-threads        \
                        --enable-shared         \
                        --with-pic              \
                        --enable-ld=default     \
                        --enable-gold           \
                        --enable-plugins        \
                        --disable-werror

        make configure-host
        make tooldir=/usr -j3
#make DESTDIR=/root/bldr-inst tooldir=/root/bldr-inst/usr install
        make DESTDIR=/root/bldr-inst install
}

#Default HTTP curl new version detection
function Detect
{
        LISTURL=http://ftp.gnu.org/gnu/binutils/
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $VERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

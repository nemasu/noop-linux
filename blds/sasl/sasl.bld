#package name
NAME=sasl

#Description
DESC="Simple Authentication and Security Layer"

#package version
VERSION=2.1.27
DVERSION=2.1.27

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=https://github.com/cyrusimap/cyrus-sasl/releases/download/cyrus-sasl-${DVERSION}/cyrus-sasl-${DVERSION}.tar.gz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# build/package dependancies
DEPS=('e2fsprogs' 'gdbm' 'glibc' 'krb5' 'linux-pam' 'mariadb-libs' 'openldap' 'openssl' 'postgresql-libs' 'sqlite' 'zlib')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
export CFLAGS="$CFLAGS -fPIC"
	libtoolize -c
	aclocal -I config
	automake -a -c
	autoheader
	autoconf

	./configure --prefix=/usr \
		--sbin=/usr/bin \
		--mandir=/usr/share/man \
		--infodir=/usr/share/info \
		--disable-static \
		--enable-shared \
		--enable-alwaystrue \
		--enable-checkapop \
		--enable-cram \
		--enable-digest \
		--disable-otp \
		--disable-srp \
		--disable-srp-setpass \
		--disable-krb4 \
		--enable-gssapi \
		--enable-auth-sasldb \
		--enable-plain \
		--enable-anon \
		--enable-login \
		--enable-ntlm \
		--disable-passdss \
		--enable-sql \
		--with-mysql=/usr \
		--with-pgsql=/usr/lib \
		--with-sqlite3=/usr/lib \
		--enable-ldapdb \
		--disable-macos-framework \
		--with-pam \
		--with-saslauthd=/var/run/saslauthd \
		--with-ldap \
		--with-dblib=gdbm \
		--with-configdir=/etc/sasl2:/etc/sasl:/usr/lib/sasl2 \
		--sysconfdir=/etc \
		--with-devrandom=/dev/urandom
	make -j${BLDR_CORES}
	make DESTDIR=/root/bldr-inst install
}

#Default HTTP curl new version detection
function Detect
{
        LISTURL=ftp://ftp.cyrusimap.org/cyrus-sasl/
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $DVERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

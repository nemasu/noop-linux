#package name
NAME=cairo

#Description
DESC="Cairo vector graphics library"

#package version
VERSION=1.17.2

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# build/package dependancies
DEPS=('expat' 'fontconfig' 'freetype2' 'glib2' 'glibc' 'harfbuzz' 'libX11' 'libXau' 'libXdmcp' 'libXext' 'libXrender' 'libglvnd' 'libpng' 'libxcb' 'lzo2' 'pcre' 'pixman' 'util-linux' 'zlib')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
	if [ ! -e cairo ]; then
		git clone https://gitlab.freedesktop.org/cairo/cairo.git
		cd cairo
		git checkout ${VERSION}

		for i in `ls  $BLDRTMPDIR/*.p`; do
			patch -Np1 -i $BLDRTMPDIR/*.p
		done
		
		# Fix typo
		sed -i 's/have_png/use_png/g' configure.ac
		cd ..
	fi
	rm -v $BLDRTMPDIR/*.p
	cd cairo

	NOCONFIGURE=1 ./autogen.sh
	./configure --prefix=/usr \
		--sysconfdir=/etc \
		--localstatedir=/var \
		--enable-xml \
		--enable-gl \
		--enable-egl \
		--enable-ps \
		--enable-pdf \
		--enable-gobject \
		--enable-tee \
		--enable-xlib-xcb
	sed -i 's/ -shared / -Wl,-O1,--as-needed\0/g' libtool
	make -j${BLDR_CORES}
	make DESTDIR=/root/bldr-inst install
}

#Default HTTP curl new version detection
function Detect
{
        LISTURL=http://cairographics.org/releases/
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $VERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

#package name
NAME=sqlite

#package version
VERSION=3081101

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=http://www.sqlite.org/2015/sqlite-autoconf-${VERSION}.tar.gz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
ISSPECIAL=1

# build/package dependancies
DEPS=('glibc' 'ncurses' 'readline')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
	export CFLAGS="$CFLAGS -DSQLITE_ENABLE_FTS3=1 -DSQLITE_ENABLE_COLUMN_METADATA=1 -DSQLITE_ENABLE_UNLOCK_NOTIFY -DSQLITE_SECURE_DELETE"

	./configure $STDUSRCONF
	make -j${BLDR_CORES}
	make DESTDIR=/root/bldr-inst install

	cd tea
	./configure $STDUSRCONF --with-system-sqlite
	make -j${BLDR_CORES}
	make DESTDIR=/root/bldr-inst install
}

#Default HTTP curl new version detection
function Detect
{
	LATEST=`curl -s http://www.sqlite.org/download.html | grep -E 'sqlite-autoconf-[0-9]*\.tar\.gz' | sed -e 's/.*sqlite-autoconf-\([0-9]*\)\.tar\.gz.*/\1/g' | sort | uniq`

	vercomp $VERSION $LATEST
	if [ $? -eq 2 ];
	then
			echo "$NAME: New Version Available! - $LATEST"
	fi
}

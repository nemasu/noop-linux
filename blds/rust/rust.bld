#package name
NAME=rust

#Description
DESC="Systems programming language focused on safety, speed and concurrency"

#package version
VERSION=1.37.0

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=https://static.rust-lang.org/dist/rustc-$VERSION-src.tar.gz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# build/package dependancies
DEPS=('curl' 'gcc-libs' 'glibc' 'llvm-libs' 'openssl' 'zlib')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

_llvm_ver=8.0.1

function BuildAndInstall
{
	pkgr -i ninja

    if [ ! -e ../compiler-rt-${_llvm_ver}.src ]; then
        cd ..
        wget https://github.com/llvm/llvm-project/releases/download/llvmorg-$_llvm_ver/compiler-rt-$_llvm_ver.src.tar.xz
        tar xf compiler-rt-$_llvm_ver.src.tar.xz
        rm *.xz
        cd ../rustc-${VERSION}-src
    else
        cd rustc-${VERSION}-src
    fi

    export RUST_COMPILER_RT_ROOT=/root/bldr-tmp/compiler-rt-8.0.1.src

	mv $BLDRTMPDIR/config.toml config.toml
	python ./x.py build
    DESTDIR=/root/bldr-inst python ./x.py install
}

#Default HTTP curl new version detection
function Detect
{
        LATEST=`curl -s -L "https://www.rust-lang.org/en-US/other-installers.html" | egrep "rustc-[0-9\.]+-src.tar.gz" | sed -e 's/.*rustc-\([0-9\.]*\)-src.tar.gz.*/\1/g'`

        vercomp $VERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

#package name
NAME=tensorflow

#Description
DESC="Computation using data flow graphs for scalable machine learning"

#package version
VERSION=1.4.0

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=https://github.com/tensorflow/tensorflow/archive/v${VERSION}.tar.gz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#autotools, python, perl, cmake, custom
BUILD=custom

# build/package dependancies
DEPS=('python-numpy' 'gcc-libs' 'glibc')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=('python-numpy')

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
    #build deps
    for i in bazel python-wheel; do
        pkgr -i $i;
    done

    mkdir -p out

    export PYTHON_BIN_PATH=/usr/bin/python3
    export PYTHON_LIB_PATH='/usr/lib/python3.5/site-packages'
    export CC_OPT_FLAGS='-march=native'
    export TF_NEED_JEMALLOC=1
    export TF_NEED_CUDA=0
    export TF_NEED_OPENCL=0
    export TF_NEED_GCP=0
    export TF_NEED_HDFS=0
    export TF_ENABLE_XLA=0
    export TF_NEED_VERBS=0
    export TF_NEED_MKL=0
    export TF_NEED_MPI=0
    export TF_NEED_S3=0
    export TF_NEED_GDR=0
    ./configure
    bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package
    bazel-bin/tensorflow/tools/pip_package/build_pip_package `pwd`/out
    pip3 install -I --root=/root/bldr-inst ./out/*.whl
}

#Default HTTP curl new version detection
function Detect
{
        LATEST=`curl -L -s https://github.com/tensorflow/tensorflow/releases | egrep "v[0-9\.]+\.tar\.gz" | head -n1 | sed -e 's/.*v\([0-9\.]*\)\.tar\.gz.*/\1/g'`
        
    vercomp $VERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

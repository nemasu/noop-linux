#package name
NAME=xfce4-settings

#Description
DESC="Settings manager for xfce"

#package version
VERSION=4.12.0

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
MM=`echo $VERSION | sed 's/\([0-9]*\.[0-9]*\).*/\1/g'`
SRC=http://archive.xfce.org/src/xfce/${NAME}/${MM}/${NAME}-${VERSION}.tar.bz2

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# build/package dependancies
DEPS=('cairo' 'dbus' 'dbus-glib' 'exo' 'fontconfig' 'garcon' 'gdk-pixbuf' 'glib2' 'glibc' 'gtk+2' 'libnotify' 'libX11' 'libXcursor' 'libxfce4ui' 'libxfce4util' 'libXi' 'libxklavier' 'libXrandr' 'pango' 'upower' 'xfconf')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
        ./configure \
                --prefix=/usr \
                --sysconfdir=/etc \
                --localstatedir=/var \
                --disable-static \
                --enable-xrandr \
                --enable-xcursor \
                --enable-libnotify \
                --enable-libxklavier \
                --enable-pluggable-dialogs \
                --enable-sound-settings \
                --disable-debug
        make -j${BLDR_CORES}
        make DESTDIR=/root/bldr-inst install
}

#Default HTTP curl new version detection
function Detect
{
        LISTURL=http://archive.xfce.org/src/xfce/${NAME}/4.10/
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $VERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

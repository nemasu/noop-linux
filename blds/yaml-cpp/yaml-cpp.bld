#package name
NAME=yaml-cpp

#package version
VERSION=0.5.3

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=https://github.com/jbeder/yaml-cpp/archive/release-${VERSION}.tar.gz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
ISSPECIAL=1

# build/package dependancies
DEPS=('gcc-libs' 'glibc')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
	cmake . -DCMAKE_INSTALL_PREFIX=/usr -DBUILD_SHARED_LIBS=ON
    make -j${BLDR_CORES}
	make DESTDIR=/root/bldr-inst install

	install -Dm644 yaml-cpp-config.cmake /root/bldr-inst/usr/lib/cmake/yaml-cpp/yaml-cpp-config.cmake
	install -Dm644 yaml-cpp-config-version.cmake /root/bldr-inst/usr/lib/cmake/yaml-cpp/yaml-cpp-config-version.cmake
	install -Dm644 yaml-cpp-targets.cmake /root/bldr-inst/usr/lib/cmake/yaml-cpp/yaml-cpp-targets.cmake
}

#Default HTTP curl new version detection
function Detect
{
	LATEST=`curl -s -L https://github.com/jbeder/yaml-cpp/releases | egrep "release-[0-9\.]*\.tar\.gz" | head -n1 | sed -e 's/.*release-\([0-9\.]*\)\.tar\.gz.*/\1/g'`

	vercomp $VERSION $LATEST
	if [ $? -eq 2 ];
	then
			echo "$NAME: New Version Available! - $LATEST"
	fi
}

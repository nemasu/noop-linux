#package name
NAME=gnupg

#package version
VERSION=2.1.10

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=ftp://ftp.gnupg.org/gcrypt/gnupg/gnupg-${VERSION}.tar.bz2

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
ISSPECIAL=1

# build/package dependancies
DEPS=('glibc' 'gnutls' 'libassuan' 'libgcrypt' 'libgpg-error' 'libksba' 'libusb-compat' 'ncurses' 'npth' 'openldap' 'readline' 'sqlite' 'zlib')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
	./configure \
		--prefix=/usr \
		--sysconfdir=/etc \
		--sbindir=/usr/bin \
		--libexecdir=/usr/lib/gnupg \
		--enable-maintainer-mode \
		--enable-symcryptrun \
		--enable-gpgtar 

	make -j${BLDR_CORES}

	make DESTDIR=/root/bldr-inst install

	ln -s gpg2 /root/bldr-inst/usr/bin/gpg
	ln -s gpgv2 /root/bldr-inst/usr/bin/gpgv
	ln -s gpg2.1.gz /root/bldr-inst/usr/share/man/man1/gpg.1.gz
	rm -rf /root/bldr-inst/usr/share/gnupg/com-certs.pem
}

#Default HTTP curl new version detection
function Detect
{
	LISTURL=ftp://ftp.gnupg.org/gcrypt/gnupg/
	FILELIST=`GetFileList`
	LATEST=0

	for i in ${FILELIST[@]};
	do
			CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
			vercomp $LATEST $CURVER
			if [ $? -eq 2 ];
			then
					LATEST=$CURVER
			fi
	done

	vercomp $VERSION $LATEST
	if [ $? -eq 2 ];
	then
			echo "$NAME: New Version Available! - $LATEST"
	fi
}

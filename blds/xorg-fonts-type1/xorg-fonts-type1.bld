#package name
NAME=xorg-fonts-type1

#Description
DESC="X.org Type1 fonts"

#package version
VERSION=1.0.3

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=http://x.org/releases/individual/font/font-bh-type1-${VERSION}.tar.bz2

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# build/package dependancies
DEPS=

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

EXTRASOURCE=("http://x.org/releases/individual/font/font-adobe-utopia-type1-1.0.4.tar.bz2"
                        "http://x.org/releases/individual/font/font-bitstream-type1-1.0.3.tar.bz2"
                        "http://x.org/releases/individual/font/font-ibm-type1-1.0.3.tar.bz2"
                        "http://x.org/releases/individual/font/font-xfree86-type1-1.0.4.tar.bz2")

function BuildAndInstall
{
        ./configure --prefix=/usr --with-fontdir=/usr/share/fonts/Type1
        make
        make DESTDIR=/root/bldr-inst install

        for i in ${EXTRASOURCE[@]};
        do
                GetSource $i
                ./configure --prefix=/usr --with-fontdir=/usr/share/fonts/Type1
                make
                make DESTDIR=/root/bldr-inst install
        done

        rm -f /root/bldr-inst/usr/share/fonts/Type1/fonts.*

}

#Default HTTP curl new version detection
function Detect
{
        NAME=font-bh-type1
        LISTURL=http://x.org/releases/individual/font/
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $VERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

NAME=firefox

#Description
DESC="Standalone web browser from mozilla.org"
VERSION=64.0.2
DVERSION=64.0.2
ISUSR=1
SRC=https://ftp.mozilla.org/pub/firefox/releases/${DVERSION}/source/firefox-${DVERSION}.source.tar.xz
EXTRACONF=
BUILD=custom
DEPS=('alsa-lib' 'atk' 'cairo' 'dbus' 'dbus-glib' 'fontconfig' 'freetype2' 'gcc-libs' 'gdk-pixbuf' 'glib2' 'glibc' 'gtk+' 'gtk+2' 'libX11' 'libXcomposite' 'libXcursor' 'libXdamage' 'libXext' 'libXfixes' 'libXi' 'libXrender' 'libXt' 'libffi' 'libxcb' 'nspr' 'nss' 'pango' 'sqlite' 'startup-notification' 'zlib')

#Firefox and thunderbird produce same libraries, no need to have them in libdb anyways.
RESTORELIBDB=1

function BuildAndInstall
{

  #build prereqs
  for i in zip autoconf2.13 rust jack unzip wayland-protocols; do
          pkgr -i $i;
  done

  # Google API keys (see http://www.chromium.org/developers/how-tos/api-keys)
  # Note: These are for noop Linux use ONLY. For your own distribution, please
  # get your own set of keys. 
  _google_api_key=AIzaSyB9Q6_d-Yce6g1iFO0rLj4N74ANKqWnrNc
  _google_default_client_id=89099530172.apps.googleusercontent.com
  _google_default_client_secret=edER2v0My77GhaBaUcdj7dQQ

  mv $BLDRTMPDIR/mozconfig .mozconfig

  echo -n "$_google_api_key" >google-api-key
  echo "ac_add_options --with-google-api-keyfile=\"$PWD/google-api-key\"" >>.mozconfig

#echo -n "$_mozilla_api_key" >mozilla-api-key
#echo "ac_add_options --with-mozilla-api-keyfile=\"$PWD/mozilla-api-key\"" >>.mozconfig

   # GCC 6
  CXXFLAGS+=" -fno-delete-null-pointer-checks -fno-schedule-insns2"
  export PYTHON="/usr/bin/python2"

#PGO is breaking build https://bugzilla.mozilla.org/show_bug.cgi?id=1332788
  # Enable PGO
#  export DISPLAY=:99
#  Xvfb -nolisten tcp -extension GLX -screen 0 1280x1024x24 $DISPLAY &

#  if ! make -f client.mk build MOZ_PGO=1; then
#    kill $!
#    return 1
#  fi

#  kill $! || true
#  make -f client.mk build -j${BLDR_CORES}

#  make -f client.mk DESTDIR=/root/bldr-inst install

  ./mach build
  ./mach buildsymbols
  DESTDIR=/root/bldr-inst ./mach install

  for i in 16 22 24 32 48 256; do
      install -Dm644 browser/branding/official/default$i.png \
        /root/bldr-inst/usr/share/icons/hicolor/${i}x${i}/apps/firefox.png
  done


	install -Dm644 browser/branding/official/content/about-logo.png \
		/root/bldr-inst/usr/share/icons/hicolor/192x192/apps/firefox.png
	install -Dm644 browser/branding/official/content/about-logo@2x.png \
    	/root/bldr-inst/usr/share/icons/hicolor/384x384/apps/firefox.png

  # Use system-provided dictionaries
  rm -rf /root/bldr-inst/usr/lib/firefox/{dictionaries,hyphenation}
  ln -s /usr/share/hunspell /root/bldr-inst/usr/lib/firefox/dictionaries
  ln -s /usr/share/hyphen /root/bldr-inst/usr/lib/firefox/hyphenation
}

#Default HTTP curl new version detection
function Detect
{
        LATEST=`curl -s "https://download.mozilla.org/?product=firefox-latest&os=linux&lang=en-US" | grep "firefox" | sed 's/.*firefox-\([0-9\.]*\)\.tar\.bz2.*/\1/g'`

        vercomp $DVERSION $LATEST
        if [ $? -eq 2 ];
        then
                                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

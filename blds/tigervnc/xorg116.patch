diff -ur tigervnc-1.3.1.orig/unix/xserver/hw/vnc/Input.cc tigervnc-1.3.1/unix/xserver/hw/vnc/Input.cc
--- tigervnc-1.3.1.orig/unix/xserver/hw/vnc/Input.cc	2013-05-30 16:53:40.000000000 +0200
+++ tigervnc-1.3.1/unix/xserver/hw/vnc/Input.cc	2014-07-19 00:36:53.722520543 +0200
@@ -262,7 +262,7 @@
 	return Success;
 }
 
-static void keyboardBell(int percent, DeviceIntPtr device, pointer ctrl,
+static void keyboardBell(int percent, DeviceIntPtr device, void * ctrl,
 			 int class_)
 {
 	if (percent > 0)
diff -ur tigervnc-1.3.1.orig/unix/xserver/hw/vnc/vncExtInit.cc tigervnc-1.3.1/unix/xserver/hw/vnc/vncExtInit.cc
--- tigervnc-1.3.1.orig/unix/xserver/hw/vnc/vncExtInit.cc	2013-07-01 14:48:31.000000000 +0200
+++ tigervnc-1.3.1/unix/xserver/hw/vnc/vncExtInit.cc	2014-07-19 00:36:53.724520543 +0200
@@ -65,18 +65,18 @@
 
   extern void vncExtensionInit();
   static void vncResetProc(ExtensionEntry* extEntry);
-  static void vncBlockHandler(pointer data, OSTimePtr t, pointer readmask);
-  static void vncWakeupHandler(pointer data, int nfds, pointer readmask);
+  static void vncBlockHandler(void * data, OSTimePtr t, void * readmask);
+  static void vncWakeupHandler(void * data, int nfds, void * readmask);
   void vncWriteBlockHandler(fd_set *fds);
   void vncWriteWakeupHandler(int nfds, fd_set *fds);
-  static void vncClientStateChange(CallbackListPtr*, pointer, pointer);
+  static void vncClientStateChange(CallbackListPtr*, void *, void *);
   static void SendSelectionChangeEvent(Atom selection);
   static int ProcVncExtDispatch(ClientPtr client);
   static int SProcVncExtDispatch(ClientPtr client);
-  static void vncSelectionCallback(CallbackListPtr *callbacks, pointer data,
-				   pointer args);
+  static void vncSelectionCallback(CallbackListPtr *callbacks, void * data,
+				   void * args);
 
-  extern char *display;
+  extern const char *display;
   extern char *listenaddr;
 }
 
@@ -285,7 +285,7 @@
 {
 }
 
-static void vncSelectionCallback(CallbackListPtr *callbacks, pointer data, pointer args)
+static void vncSelectionCallback(CallbackListPtr *callbacks, void * data, void * args)
 {
   SelectionInfoRec *info = (SelectionInfoRec *) args;
   Selection *selection = info->selection;
@@ -302,7 +302,7 @@
 // selections have changed, and if so, notify any interested X clients.
 //
 
-static void vncBlockHandler(pointer data, OSTimePtr timeout, pointer readmask)
+static void vncBlockHandler(void * data, OSTimePtr timeout, void * readmask)
 {
   fd_set* fds = (fd_set*)readmask;
 
@@ -313,7 +313,7 @@
       desktop[scr]->blockHandler(fds, timeout);
 }
 
-static void vncWakeupHandler(pointer data, int nfds, pointer readmask)
+static void vncWakeupHandler(void * data, int nfds, void * readmask)
 {
   fd_set* fds = (fd_set*)readmask;
 
@@ -403,7 +403,7 @@
   vncWriteWakeupHandler(ret, &fallbackFds);
 }
 
-static void vncClientStateChange(CallbackListPtr*, pointer, pointer p)
+static void vncClientStateChange(CallbackListPtr*, void *, void * p)
 {
   ClientPtr client = ((NewClientInfoRec*)p)->client;
   if (client->clientState == ClientStateGone) {
@@ -469,7 +469,7 @@
 
 
 static CARD32 queryConnectTimerCallback(OsTimerPtr timer,
-                                        CARD32 now, pointer arg)
+                                        CARD32 now, void * arg)
 {
   if (queryConnectTimeout)
     queryConnectDesktop->approveConnection(queryConnectId, false, "The attempt to prompt the user to accept the connection failed");
diff -ur tigervnc-1.3.1.orig/unix/xserver/hw/vnc/vncHooks.cc tigervnc-1.3.1/unix/xserver/hw/vnc/vncHooks.cc
--- tigervnc-1.3.1.orig/unix/xserver/hw/vnc/vncHooks.cc	2013-05-22 14:57:16.000000000 +0200
+++ tigervnc-1.3.1/unix/xserver/hw/vnc/vncHooks.cc	2014-07-19 00:36:53.725520543 +0200
@@ -91,8 +91,8 @@
 } vncHooksScreenRec, *vncHooksScreenPtr;
 
 typedef struct {
-    GCFuncs *wrappedFuncs;
-    GCOps *wrappedOps;
+    const GCFuncs *wrappedFuncs;
+    const GCOps *wrappedOps;
 } vncHooksGCRec, *vncHooksGCPtr;
 
 #if XORG == 15
@@ -141,11 +141,11 @@
 #endif
 				  ScreenPtr pScreen, CursorPtr cursor);
 #if XORG < 112
-static void vncHooksBlockHandler(int i, pointer blockData, pointer pTimeout,
-                                 pointer pReadmask);
+static void vncHooksBlockHandler(int i, void * blockData, void * pTimeout,
+                                 void * pReadmask);
 #else
-static void vncHooksBlockHandler(ScreenPtr pScreen, pointer pTimeout,
-                                 pointer pReadmask);
+static void vncHooksBlockHandler(ScreenPtr pScreen, void * pTimeout,
+                                 void * pReadmask);
 #endif
 #ifdef RENDER
 static void vncHooksComposite(CARD8 op, PicturePtr pSrc, PicturePtr pMask, 
@@ -174,7 +174,7 @@
 static void vncHooksChangeGC(GCPtr pGC, unsigned long mask);
 static void vncHooksCopyGC(GCPtr src, unsigned long mask, GCPtr dst);
 static void vncHooksDestroyGC(GCPtr pGC);
-static void vncHooksChangeClip(GCPtr pGC, int type, pointer pValue,int nrects);
+static void vncHooksChangeClip(GCPtr pGC, int type, void * pValue,int nrects);
 static void vncHooksDestroyClip(GCPtr pGC);
 static void vncHooksCopyClip(GCPtr dst, GCPtr src);
 
@@ -226,10 +226,10 @@
                                 int count, unsigned short *chars);
 static void vncHooksImageGlyphBlt(DrawablePtr pDrawable, GCPtr pGC, int x,
                                   int y, unsigned int nglyph,
-                                  CharInfoPtr *ppci, pointer pglyphBase);
+                                  CharInfoPtr *ppci, void * pglyphBase);
 static void vncHooksPolyGlyphBlt(DrawablePtr pDrawable, GCPtr pGC, int x,
                                  int y, unsigned int nglyph,
-                                 CharInfoPtr *ppci, pointer pglyphBase);
+                                 CharInfoPtr *ppci, void * pglyphBase);
 static void vncHooksPushPixels(GCPtr pGC, PixmapPtr pBitMap,
                                DrawablePtr pDrawable, int w, int h, int x,
                                int y);
@@ -575,11 +575,11 @@
 // these are just drawing the cursor.
 
 #if XORG < 112
-static void vncHooksBlockHandler(int i, pointer blockData, pointer pTimeout,
-                                 pointer pReadmask)
+static void vncHooksBlockHandler(int i, void * blockData, void * pTimeout,
+                                 void * pReadmask)
 #else
-static void vncHooksBlockHandler(ScreenPtr pScreen_, pointer pTimeout,
-                                 pointer pReadmask)
+static void vncHooksBlockHandler(ScreenPtr pScreen_, void * pTimeout,
+                                 void * pReadmask)
 #endif
 {
 #if XORG < 112
@@ -914,7 +914,7 @@
   GCFuncUnwrapper u(pGC);
   (*pGC->funcs->DestroyGC) (pGC);
 }
-static void vncHooksChangeClip(GCPtr pGC, int type, pointer pValue, int nrects)
+static void vncHooksChangeClip(GCPtr pGC, int type, void * pValue, int nrects)
 {
   GCFuncUnwrapper u(pGC);
   (*pGC->funcs->ChangeClip) (pGC, type, pValue, nrects);
@@ -954,7 +954,7 @@
   }
   GCPtr pGC;
   vncHooksGCPtr vncHooksGC;
-  GCFuncs* oldFuncs;
+  const GCFuncs* oldFuncs;
   ScreenPtr pScreen;
 };
 
@@ -1793,7 +1793,7 @@
 
 static void vncHooksImageGlyphBlt(DrawablePtr pDrawable, GCPtr pGC, int x,
                                   int y, unsigned int nglyph,
-                                  CharInfoPtr *ppci, pointer pglyphBase)
+                                  CharInfoPtr *ppci, void * pglyphBase)
 {
   GC_OP_UNWRAPPER(pDrawable, pGC, ImageGlyphBlt);
 
@@ -1819,7 +1819,7 @@
 
 static void vncHooksPolyGlyphBlt(DrawablePtr pDrawable, GCPtr pGC, int x,
                                  int y, unsigned int nglyph,
-                                 CharInfoPtr *ppci, pointer pglyphBase)
+                                 CharInfoPtr *ppci, void * pglyphBase)
 {
   GC_OP_UNWRAPPER(pDrawable, pGC, PolyGlyphBlt);
 
diff -ur tigervnc-1.3.1.orig/unix/xserver/hw/vnc/xf86vncModule.cc tigervnc-1.3.1/unix/xserver/hw/vnc/xf86vncModule.cc
--- tigervnc-1.3.1.orig/unix/xserver/hw/vnc/xf86vncModule.cc	2013-03-14 18:52:53.000000000 +0100
+++ tigervnc-1.3.1/unix/xserver/hw/vnc/xf86vncModule.cc	2014-07-19 00:36:53.725520543 +0200
@@ -81,11 +81,11 @@
 
 _X_EXPORT XF86ModuleData vncModuleData = { &vncVersRec, vncSetup, NULL };
 
-static pointer
-vncSetup(pointer module, pointer opts, int *errmaj, int *errmin) {
-    LoadExtension(&vncExt, FALSE);
+static void *
+vncSetup(void * module, void * opts, int *errmaj, int *errmin) {
+    LoadExtensionList(&vncExt, 1, FALSE);
     /* Need a non-NULL return value to indicate success */
-    return (pointer)1;
+    return (void *)1;
 }
 
 static void vncExtensionInitWithParams(INITARGS)
diff -ur tigervnc-1.3.1.orig/unix/xserver/hw/vnc/xorg-version.h tigervnc-1.3.1/unix/xserver/hw/vnc/xorg-version.h
--- tigervnc-1.3.1.orig/unix/xserver/hw/vnc/xorg-version.h	2013-02-19 14:51:29.000000000 +0100
+++ tigervnc-1.3.1/unix/xserver/hw/vnc/xorg-version.h	2014-07-19 00:36:50.530520710 +0200
@@ -44,8 +44,12 @@
 #define XORG 113
 #elif XORG_VERSION_CURRENT < ((1 * 10000000) + (14 * 100000) + (99 * 1000))
 #define XORG 114
+#elif XORG_VERSION_CURRENT < ((1 * 10000000) + (15 * 100000) + (99 * 1000))
+#define XORG 115
+#elif XORG_VERSION_CURRENT < ((1 * 10000000) + (16 * 100000) + (99 * 1000))
+#define XORG 116
 #else
-#error "X.Org newer than 1.14 is not supported"
+#error "X.Org newer than 1.16 is not supported"
 #endif
 
 #endif
diff -ur tigervnc-1.3.1.orig/unix/xserver/hw/vnc/XserverDesktop.cc tigervnc-1.3.1/unix/xserver/hw/vnc/XserverDesktop.cc
--- tigervnc-1.3.1.orig/unix/xserver/hw/vnc/XserverDesktop.cc	2013-05-22 14:56:25.000000000 +0200
+++ tigervnc-1.3.1/unix/xserver/hw/vnc/XserverDesktop.cc	2014-07-19 00:36:53.723520543 +0200
@@ -48,7 +48,7 @@
 #define public c_public
 #define class c_class
 
-extern char *display;
+extern const char *display;
 
 #include "colormapst.h"
 #ifdef RANDR
@@ -174,7 +174,7 @@
 {
   pScreen = pScreen_;
   int i;
-  pointer retval;
+  void * retval;
 
 #if XORG >= 17
 #define dixLookupResource dixLookupResourceByType
diff -ur tigervnc-1.3.1.orig/unix/xserver/hw/vnc/xvnc.cc tigervnc-1.3.1/unix/xserver/hw/vnc/xvnc.cc
--- tigervnc-1.3.1.orig/unix/xserver/hw/vnc/xvnc.cc	2014-03-19 13:11:09.000000000 +0100
+++ tigervnc-1.3.1/unix/xserver/hw/vnc/xvnc.cc	2014-07-19 00:36:53.726520543 +0200
@@ -103,7 +103,7 @@
                        "See http://www.tigervnc.org for information on TigerVNC.\n")
 
 
-extern char *display;
+extern const char *display;
 extern int monitorResolution;
 
 #define VFB_DEFAULT_WIDTH  1024
@@ -762,7 +762,7 @@
 	    curpmap = (ColormapPtr) LookupIDByType(pmap->pScreen->defColormap,
 						   RT_COLORMAP);
 #else
-	    dixLookupResourceByType((pointer *) &curpmap, pmap->pScreen->defColormap,
+	    dixLookupResourceByType((void * *) &curpmap, pmap->pScreen->defColormap,
 				    RT_COLORMAP, serverClient, DixUnknownAccess);
 #endif
 	    (*pmap->pScreen->InstallColormap)(curpmap);
@@ -1597,7 +1597,7 @@
 } /* end vfbScreenInit */
 
 
-static void vfbClientStateChange(CallbackListPtr*, pointer, pointer) {
+static void vfbClientStateChange(CallbackListPtr*, void *, void *) {
   dispatchException &= ~DE_RESET;
 }
  
@@ -1625,7 +1625,7 @@
 #if XORG >= 113
 #ifdef GLXEXT
     if (serverGeneration == 1)
-        LoadExtension(&glxExt, TRUE);
+        LoadExtensionList(&glxExt, 1, TRUE);
 #endif
 #endif
 

#package name
NAME=mono

#Description
DESC="Mono open source ECMA CLI, C# and .NET implementation."

#package version
VERSION=4.8.0.344

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=https://download.mono-project.com/sources/mono/mono-${VERSION}.tar.bz2

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#autotools, python, perl, cmake, custom
BUILD=custom

# build/package dependancies
DEPS=

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
	./configure \
		--prefix=/usr \
		--sysconfdir=/etc \
		--bindir=/usr/bin \
		--sbindir=/usr/bin \
		--with-mcs-docs=no 
	make
    make DESTDIR=/root/bldr-inst install


	# build jay
	pushd mcs/jay
	make
    make DESTDIR=/root/bldr-inst prefix=/usr INSTALL=../../install-sh install
	popd

	#fix .pc file to be able to request mono on what it depends, fixes #go-oo build
	sed -i -e "s:#Requires:Requires:" /root/bldr-inst/usr/lib/pkgconfig/mono.pc
	sed -i -e "s:/2.0/:/4.5/:g" /root/bldr-inst/usr/lib/pkgconfig/mono-nunit.pc
}

#Default HTTP curl new version detection
function Detect
{
	LISTURL=https://download.mono-project.com/sources/mono/
	FILELIST=`GetFileList`
	LATEST=0

	for i in ${FILELIST[@]};
	do
			CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
			vercomp $LATEST $CURVER
			if [ $? -eq 2 ];
			then
					LATEST=$CURVER
			fi
	done

	vercomp $VERSION $LATEST
	if [ $? -eq 2 ];
	then
			echo "$NAME: New Version Available! - $LATEST"
	fi
}

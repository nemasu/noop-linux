#package name
NAME=qemu

#Description
DESC="A generic and open source processor emulator which achieves a good emulation speed by using dynamic translation"

#package version
VERSION=2.11.0

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=http://wiki.qemu-project.org/download/qemu-${VERSION}.tar.bz2

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# build/package dependancies
DEPS=('alsa-lib' 'atk' 'bluez' 'cairo' 'curl' 'gcc-libs' 'gdk-pixbuf' 'glib2' 'glibc' 'gnutls' 'gtk+' 'libX11' 'libaio' 'libcap-ng' 'libcap2' 'libdrm' 'libepoxy' 'libjpeg' 'libpng' 'libseccomp' 'libssh2' 'libusb' 'libxkbcommon' 'lzo2' 'mesalib' 'ncurses' 'nettle' 'pango' 'pcre2' 'pixman' 'pulseaudio' 'sasl' 'sdl' 'snappy' 'vte' 'zlib')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
         ./configure --prefix=/usr --sysconfdir=/etc --audio-drv-list='pa alsa sdl' \
                  --python=/usr/bin/python2 --smbd=/usr/bin/smbd \
                  --enable-docs --libexecdir=/usr/lib/qemu \
                  --disable-gtk --enable-linux-aio --enable-seccomp \
                  --localstatedir=/var --enable-tpm 
        make -j${BLDR_CORES}
        make DESTDIR=/root/bldr-inst install
}

#Default HTTP curl new version detection
function Detect
{
        LISTURL=http://wiki.qemu-project.org/download/
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $VERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

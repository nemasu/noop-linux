#package name
NAME=anki

#Description
DESC="Helps you remember facts (like words/phrases in a foreign language) efficiently"

#package version
VERSION=2.0.50

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
SRC=https://apps.ankiweb.net/downloads/current/anki-${VERSION}-source.tgz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
BUILD=custom

# build/package dependancies
DEPS=('pyqt4' 'sip' 'glibc' 'lib32-glibc' 'lib32-portaudio' 'portaudio')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=('sip' 'pyqt4')

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=1

function BuildAndInstall
{

	DESTDIR=/root/bldr-inst
	PREFIX=/usr
    mkdir -p ${DESTDIR}${PREFIX}/bin
    mkdir -p ${DESTDIR}${PREFIX}/share/man/man1
    mkdir -p ${DESTDIR}${PREFIX}/share/applications
    mkdir -p ${DESTDIR}${PREFIX}/share/pixmaps
    mkdir -p ${DESTDIR}${PREFIX}/share/anki

    cp -av * ${DESTDIR}${PREFIX}/share/anki/

    cd ${DESTDIR}${PREFIX}/share/anki 
    mv runanki ${DESTDIR}${PREFIX}/bin/anki
    mv anki.xpm anki.png ${DESTDIR}${PREFIX}/share/pixmaps/
    mv anki.desktop ${DESTDIR}${PREFIX}/share/applications/
    mv anki.1 ${DESTDIR}${PREFIX}/share/man/man1/

	sed -i -e 's/python/python2/g' /root/bldr-inst/usr/bin/anki
}

#Default HTTP curl new version detection
function Detect
{
        LISTURL=http://ankisrs.net/index.html
        FILELIST=`GetFileList`
        LATEST=0

        for i in ${FILELIST[@]};
        do
                        CURVER=`echo $i | sed -e 's/'"${NAME}"'-//g; s/.tar.*//g'`
                        vercomp $LATEST $CURVER
                        if [ $? -eq 2 ];
                        then
                                        LATEST=$CURVER
                        fi
        done

        vercomp $VERSION $LATEST
        if [ $? -eq 2 ];
        then
                        echo "$NAME: New Version Available! - $LATEST"
        fi
}

#package name
NAME=boost

#package version
VERSION=1.59.0-1
DVERSION=1.59.0

#directory locations, 99.99% of the time this is 1
ISUSR=1

#source location (used by wget)
MM=`echo $DVERSION | sed -e 's/\./_/g;'`
SRC=http://downloads.sourceforge.net/boost/boost_${MM}.tar.gz

#extra parameters to pass to configure (if not ISSPECIAL)
EXTRACONF=

#1 if BuildAndInstall should be called instead of ./configure && make && make install method
ISSPECIAL=1

# build/package dependancies
DEPS=('gcc-libs' 'glibc' 'icu4c' 'openmpi' 'zlib')

# 'no' to skip calls to strip
STRIP=

#array of deps to add to package (ones that are not automatically picked up by pkgr)
PKGDEPS=

#1 to restore libdb to what it was before pkgr -genmeta is called ( ie. ignore libs )
RESTORELIBDB=

function BuildAndInstall
{
	mkdir -p ../stagedir/usr

	./bootstrap.sh --with-toolset=gcc --with-icu --with-python=/usr/bin/python2

	echo "using mpi ;" >> project-config.jam

   ./b2 \
      variant=release \
      debug-symbols=off \
      threading=multi \
      runtime-link=shared \
      link=shared,static \
      toolset=gcc \
      python=2.7 \
      --layout=system \
      --prefix="/root/bldr-tmp/stagedir" \
      -j3 \
      install

	  mkdir -p /root/bldr-inst/usr
	  cp -r /root/bldr-tmp/stagedir/{include,lib} /root/bldr-inst/usr
}


#Default HTTP curl new version detection
function Detect
{
	LATEST=`curl -s -L http://www.boost.org | grep -E "version_[0-9_]*\.html" | head -n1 | sed -e 's/.*version_\([0-9_]*\)\.html.*/\1/g;' | sed -e 's/_/\./g;'`

	vercomp $DVERSION $LATEST
	if [ $? -eq 2 ];
	then
			echo "$NAME: New Version Available! - $LATEST"
	fi
}

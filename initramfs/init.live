#!/bin/sh

#Create all the symlinks to /bin/busybox
/usr/bin/busybox --install -s

#Mount things needed by this script
mount -t proc proc /proc
mount -t sysfs sysfs /sys
mount -t devtmpfs devtmpfs /dev

#Disable kernel messages from popping onto the screen
echo 0 > /proc/sys/kernel/printk

#Clear the screen
clear


#Function for parsing command line options with "=" in them
# get_opt("init=/sbin/init") will return "/sbin/init"
get_opt() {
    echo "$@" | cut -d "=" -f 2
}

#Defaults
init="/usr/lib/systemd/systemd"
root="/dev/sda1"

#Process command line options
for i in $(cat /proc/cmdline); do
    case $i in
        root\=*)
            root=$(get_opt $i)
            ;;
        init\=*)
            init=$(get_opt $i)
            ;;
    esac
done

#Give time for things to be detected
/usr/bin/busybox usleep 5000000
#Mount the root device
#/usr/bin/busybox mdev -s
mkdir -p /newroot /ro /rw /cdrom

#Load modules
for i in `ls /mods/`;
do
	/usr/bin/busybox modprobe $i
done


#figure out where to boot from...is there a better way?
mkdir /mnttest

echo "Loading root..."

for i in 0 1 2 3 4 5;
do
	mount /dev/sr$i /mnttest &> /dev/null
	if [ -e /mnttest/boot/noop-initramfs-live.igz ];
	then
		umount /mnttest
		mount /dev/sr$i /cdrom
		isfound="yes"
		break
	else
		umount /mnttest &> /dev/null
	fi
done

if [ "$isfound" != "yes" ];
then
	for i in a b c d e f g h i j k l m n o p q r s t u v w x y z;
	do

		if [ -e /dev/sd$i ];
		then
			mount /dev/sd$i /mnttest &> /dev/null
			if [ -e /mnttest/boot/noop-initramfs-live.igz ];
			then
				umount /mnttest
				mount /dev/sd$i /cdrom
				isfound="yes"
				break
			else
				umount /mnttest &> /dev/null
			fi
		fi

		for j in 1 2 3 4 5 6 7 8 9;
		do
			if [ -e /dev/sd$i$j ];
			then
				mount /dev/sd$i$j /mnttest &> /dev/null
				if [ -e /mnttest/boot/noop-initramfs-live.igz ];
				then
					umount /mnttest
					mount /dev/sd$i$j /cdrom
					isfound="yes"
					break
				else
					umount /mnttest &> /dev/null
				fi
			fi
		done

		if [ "$isfound" == "yes" ];
		then
			break
		fi
	done
fi

mount /cdrom/root.sqsh /ro
mount -t tmpfs tmpfs /rw
mkdir /rw/mount
mkdir /rw/work
mount -t overlay overlay -o lowerdir=/ro,upperdir=/rw/mount,workdir=/rw/work /newroot

#Check if $init exists and is executable
if [[ -x "/newroot/${init}" ]] ; then
    #Unmount all other mounts so that the ram used by
    #the initramfs can be cleared after switch_root
    umount /sys /proc /dev

    #Switch to the new root and execute init
    exec /usr/bin/busybox switch_root /newroot "${init}"
fi

#This will only be run if the exec above failed
echo "Failed to switch_root, dropping to a shell"
exec sh


#!/bin/bash

set -e

KERVER=`grep -m1 VER: /var/noop/installed/linux-kernel | sed -e 's/VER://g'`
HOST=http://www.nooplinux.org/noop
PKGHOST=$HOST/packages/`uname -m`

#Check for stuff
if [ -e /usr/bin/which ];
then
	WHICH=/usr/bin/which
else
	if [ -e /bin/which ];
	then
		WHICH=/bin/which
	else
		echo '"which" not found in /usr/bin or /bin, please install which to continue';
		exit 1
	fi
fi

PROGS=('wget' 'tar' 'uname' 'chmod' 'mount' 'chroot' 'rm' 'ln' 'curl')
for i in ${PROGS[@]};
do
	if [ `$WHICH $i | wc -l` == "0" ];
	then
		echo "$i not found, please install to continue";
		exit 1
	fi
done

WGET=`$WHICH wget`
TAR=`$WHICH tar`
UNAME=`$WHICH uname`
CHMOD=`$WHICH chmod`
MOUNT=`$WHICH mount`
CHROOT=`$WHICH chroot`
RM=`$WHICH rm`
LN=`$WHICH ln`
CURL=`$WHICH curl`

#prereqs
pkgr -i aufs3-utils &> /dev/null
pkgr -i cpio &> /dev/null

PREFIX=/root/initramfs

mkdir -p $PREFIX

cd $PREFIX
$WGET $PKGHOST/file-base.tar.bz2 -O$PREFIX/file-base.tar.bz2
$TAR xf file-base.tar.bz2
$RM file-base.tar.bz2

if [ `$UNAME -m` == "x86_64" ]; then
	$LN -s lib lib64
	cd usr
	$LN -s lib lib64
fi

#Modules that need to be in initramfs for some reason, add add needed.
mkdir -p $PREFIX/mods
mkdir -p $PREFIX/lib/modules/`uname -r`/
mkdir -p $PREFIX/lib/firmware

function copy_module() {

	if [ -n "$1" ];
	then
		MOD_PATH=`modinfo $1 | grep -e "^filename:" | awk '{print $2;}'`
		name=`echo $MOD_PATH | sed -e 's/^.*\///g'`
		if [ ! -e "${PREFIX}${MOD_PATH}" ];
		then
			install -D -v $MOD_PATH ${PREFIX}${MOD_PATH}
			
			for j in `modinfo $1 |  grep -e "^depends:" | awk '{print $2;}' | sed -e 's/,/ /g'`;
			do
				copy_module "$j"
			done

			for k in `modinfo $1 | grep -e "^firmware:" | awk '{print $2;}'`;
			do
				find /lib/firmware -name "${k}" -exec cp -v {} $PREFIX/lib/firmware/ \;
			done
		fi
	fi
}

for i in iwldvm snd_hda_intel snd_hda_codec_hdmi snd_hda_codec_realtek;
do
	touch $PREFIX/mods/$i
	copy_module "$i"
done
find $PREFIX/lib/modules -name "*.xz" -exec unxz {} \;
cp /lib/modules/$KERVER/modules* $PREFIX/lib/modules/$KERVER/
depmod -a -b $PREFIX

cp -v `which mount.aufs` $PREFIX/sbin

$CURL -L -s https://github.com/nemasu/noop-linux/raw/master/pkgr > $PREFIX/usr/sbin/pkgr

$CHMOD a+x $PREFIX/usr/sbin/pkgr
export PATH=$PREFIX/usr/sbin:$PATH

PREFIX=$PREFIX pkgr -s
export PKGR_SUPPRESS_P_OUTPUT=1

for i in busybox bash;
do
	PREFIX=$PREFIX pkgr -i $i
done

rm -rf $PREFIX/tmp/*
rm -rf $PREFIX/etc/*
rm -rf $PREFIX/usr/sbin/pkgr
rm -rf $PREFIX/var/noop

touch $PREFIX/etc/mtab

$WGET https://github.com/nemasu/noop-linux/raw/master/initramfs/init.aufs -O$PREFIX/init && $CHMOD +x $PREFIX/init

cd $PREFIX
find . | cpio -H newc -o > ../initramfs.cpio
cd ..
cat initramfs.cpio | gzip > noop-initramfs-live.igz
rm initramfs.cpio

rm -rf $PREFIX
